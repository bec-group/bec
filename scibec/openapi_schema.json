{
    "openapi": "3.0.0",
    "info": {
        "title": "scibec",
        "version": "0.0.1",
        "description": "scibec",
        "contact": {"name": "Klaus Wakonig", "email": "klaus.wakonig@psi.ch"},
    },
    "paths": {
        "/beamlines/count": {
            "get": {
                "x-controller-name": "BeamlineController",
                "x-operation-name": "count",
                "tags": ["BeamlineController"],
                "responses": {
                    "200": {
                        "description": "Beamline model count",
                        "content": {
                            "application/json": {
                                "schema": {"$ref": "#/components/schemas/loopback.Count"}
                            }
                        },
                    }
                },
                "parameters": [
                    {
                        "name": "where",
                        "in": "query",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Beamline.WhereFilter",
                                    "additionalProperties": true,
                                    "x-typescript-type": "@loopback/repository#Where<Beamline>",
                                }
                            }
                        },
                    }
                ],
                "operationId": "BeamlineController.count",
            }
        },
        "/beamlines/{id}": {
            "put": {
                "x-controller-name": "BeamlineController",
                "x-operation-name": "replaceById",
                "tags": ["BeamlineController"],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {"schema": {"description": "Beamline PUT success"}}
                        },
                    }
                },
                "parameters": [
                    {"name": "id", "in": "path", "schema": {"type": "string"}, "required": true}
                ],
                "requestBody": {
                    "content": {
                        "application/json": {"schema": {"$ref": "#/components/schemas/Beamline"}}
                    },
                    "x-parameter-index": 1,
                },
                "operationId": "BeamlineController.replaceById",
            },
            "patch": {
                "x-controller-name": "BeamlineController",
                "x-operation-name": "updateById",
                "tags": ["BeamlineController"],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {
                                "schema": {"description": "Beamline PATCH success"}
                            }
                        },
                    }
                },
                "parameters": [
                    {"name": "id", "in": "path", "schema": {"type": "string"}, "required": true}
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {"$ref": "#/components/schemas/BeamlinePartial"}
                        }
                    },
                    "x-parameter-index": 1,
                },
                "operationId": "BeamlineController.updateById",
            },
            "get": {
                "x-controller-name": "BeamlineController",
                "x-operation-name": "findById",
                "tags": ["BeamlineController"],
                "responses": {
                    "200": {
                        "description": "Beamline model instance",
                        "content": {
                            "application/json": {
                                "schema": {"$ref": "#/components/schemas/BeamlineWithRelations"}
                            }
                        },
                    }
                },
                "parameters": [
                    {"name": "id", "in": "path", "schema": {"type": "string"}, "required": true},
                    {
                        "name": "filter",
                        "in": "query",
                        "content": {
                            "application/json": {
                                "schema": {"$ref": "#/components/schemas/Beamline.Filter"}
                            }
                        },
                    },
                ],
                "operationId": "BeamlineController.findById",
            },
            "delete": {
                "x-controller-name": "BeamlineController",
                "x-operation-name": "deleteById",
                "tags": ["BeamlineController"],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {
                                "schema": {"description": "Beamline DELETE success"}
                            }
                        },
                    }
                },
                "parameters": [
                    {"name": "id", "in": "path", "schema": {"type": "string"}, "required": true}
                ],
                "operationId": "BeamlineController.deleteById",
            },
        },
        "/beamlines": {
            "post": {
                "x-controller-name": "BeamlineController",
                "x-operation-name": "create",
                "tags": ["BeamlineController"],
                "responses": {
                    "200": {
                        "description": "Beamline model instance",
                        "content": {
                            "application/json": {
                                "schema": {"$ref": "#/components/schemas/Beamline"}
                            }
                        },
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {"schema": {"$ref": "#/components/schemas/NewBeamline"}}
                    }
                },
                "operationId": "BeamlineController.create",
            },
            "patch": {
                "x-controller-name": "BeamlineController",
                "x-operation-name": "updateAll",
                "tags": ["BeamlineController"],
                "responses": {
                    "200": {
                        "description": "Beamline PATCH success count",
                        "content": {
                            "application/json": {
                                "schema": {"$ref": "#/components/schemas/loopback.Count"}
                            }
                        },
                    }
                },
                "parameters": [
                    {
                        "name": "where",
                        "in": "query",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Beamline.WhereFilter",
                                    "additionalProperties": true,
                                    "x-typescript-type": "@loopback/repository#Where<Beamline>",
                                }
                            }
                        },
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {"$ref": "#/components/schemas/BeamlinePartial"}
                        }
                    }
                },
                "operationId": "BeamlineController.updateAll",
            },
            "get": {
                "x-controller-name": "BeamlineController",
                "x-operation-name": "find",
                "tags": ["BeamlineController"],
                "responses": {
                    "200": {
                        "description": "Array of Beamline model instances",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {"$ref": "#/components/schemas/BeamlineWithRelations"},
                                }
                            }
                        },
                    }
                },
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "content": {
                            "application/json": {
                                "schema": {"$ref": "#/components/schemas/Beamline.Filter1"}
                            }
                        },
                    }
                ],
                "operationId": "BeamlineController.find",
            },
        },
        "/datasets/count": {
            "get": {
                "x-controller-name": "DatasetController",
                "x-operation-name": "count",
                "tags": ["DatasetController"],
                "responses": {
                    "200": {
                        "description": "Dataset model count",
                        "content": {
                            "application/json": {
                                "schema": {"$ref": "#/components/schemas/loopback.Count"}
                            }
                        },
                    }
                },
                "parameters": [
                    {
                        "name": "where",
                        "in": "query",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Dataset.WhereFilter",
                                    "additionalProperties": true,
                                    "x-typescript-type": "@loopback/repository#Where<Dataset>",
                                }
                            }
                        },
                    }
                ],
                "operationId": "DatasetController.count",
            }
        },
        "/datasets/{id}": {
            "put": {
                "x-controller-name": "DatasetController",
                "x-operation-name": "replaceById",
                "tags": ["DatasetController"],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {"schema": {"description": "Dataset PUT success"}}
                        },
                    }
                },
                "parameters": [
                    {"name": "id", "in": "path", "schema": {"type": "string"}, "required": true}
                ],
                "requestBody": {
                    "content": {
                        "application/json": {"schema": {"$ref": "#/components/schemas/Dataset"}}
                    },
                    "x-parameter-index": 1,
                },
                "operationId": "DatasetController.replaceById",
            },
            "patch": {
                "x-controller-name": "DatasetController",
                "x-operation-name": "updateById",
                "tags": ["DatasetController"],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {"schema": {"description": "Dataset PATCH success"}}
                        },
                    }
                },
                "parameters": [
                    {"name": "id", "in": "path", "schema": {"type": "string"}, "required": true}
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {"$ref": "#/components/schemas/DatasetPartial"}
                        }
                    },
                    "x-parameter-index": 1,
                },
                "operationId": "DatasetController.updateById",
            },
            "get": {
                "x-controller-name": "DatasetController",
                "x-operation-name": "findById",
                "tags": ["DatasetController"],
                "responses": {
                    "200": {
                        "description": "Dataset model instance",
                        "content": {
                            "application/json": {
                                "schema": {"$ref": "#/components/schemas/DatasetWithRelations"}
                            }
                        },
                    }
                },
                "parameters": [
                    {"name": "id", "in": "path", "schema": {"type": "string"}, "required": true},
                    {
                        "name": "filter",
                        "in": "query",
                        "content": {
                            "application/json": {
                                "schema": {"$ref": "#/components/schemas/Dataset.Filter"}
                            }
                        },
                    },
                ],
                "operationId": "DatasetController.findById",
            },
            "delete": {
                "x-controller-name": "DatasetController",
                "x-operation-name": "deleteById",
                "tags": ["DatasetController"],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {
                                "schema": {"description": "Dataset DELETE success"}
                            }
                        },
                    }
                },
                "parameters": [
                    {"name": "id", "in": "path", "schema": {"type": "string"}, "required": true}
                ],
                "operationId": "DatasetController.deleteById",
            },
        },
        "/datasets": {
            "post": {
                "x-controller-name": "DatasetController",
                "x-operation-name": "create",
                "tags": ["DatasetController"],
                "responses": {
                    "200": {
                        "description": "Dataset model instance",
                        "content": {
                            "application/json": {"schema": {"$ref": "#/components/schemas/Dataset"}}
                        },
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {"schema": {"$ref": "#/components/schemas/NewDataset"}}
                    }
                },
                "operationId": "DatasetController.create",
            },
            "patch": {
                "x-controller-name": "DatasetController",
                "x-operation-name": "updateAll",
                "tags": ["DatasetController"],
                "responses": {
                    "200": {
                        "description": "Dataset PATCH success count",
                        "content": {
                            "application/json": {
                                "schema": {"$ref": "#/components/schemas/loopback.Count"}
                            }
                        },
                    }
                },
                "parameters": [
                    {
                        "name": "where",
                        "in": "query",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Dataset.WhereFilter",
                                    "additionalProperties": true,
                                    "x-typescript-type": "@loopback/repository#Where<Dataset>",
                                }
                            }
                        },
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {"$ref": "#/components/schemas/DatasetPartial"}
                        }
                    }
                },
                "operationId": "DatasetController.updateAll",
            },
            "get": {
                "x-controller-name": "DatasetController",
                "x-operation-name": "find",
                "tags": ["DatasetController"],
                "responses": {
                    "200": {
                        "description": "Array of Dataset model instances",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {"$ref": "#/components/schemas/DatasetWithRelations"},
                                }
                            }
                        },
                    }
                },
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "content": {
                            "application/json": {
                                "schema": {"$ref": "#/components/schemas/Dataset.Filter1"}
                            }
                        },
                    }
                ],
                "operationId": "DatasetController.find",
            },
        },
        "/devices/count": {
            "get": {
                "x-controller-name": "DeviceController",
                "x-operation-name": "count",
                "tags": ["DeviceController"],
                "responses": {
                    "200": {
                        "description": "Device model count",
                        "content": {
                            "application/json": {
                                "schema": {"$ref": "#/components/schemas/loopback.Count"}
                            }
                        },
                    }
                },
                "parameters": [
                    {
                        "name": "where",
                        "in": "query",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Device.WhereFilter",
                                    "additionalProperties": true,
                                    "x-typescript-type": "@loopback/repository#Where<Device>",
                                }
                            }
                        },
                    }
                ],
                "operationId": "DeviceController.count",
            }
        },
        "/devices/{id}": {
            "put": {
                "x-controller-name": "DeviceController",
                "x-operation-name": "replaceById",
                "tags": ["DeviceController"],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {"schema": {"description": "Device PUT success"}}
                        },
                    }
                },
                "parameters": [
                    {"name": "id", "in": "path", "schema": {"type": "string"}, "required": true}
                ],
                "requestBody": {
                    "content": {
                        "application/json": {"schema": {"$ref": "#/components/schemas/Device"}}
                    },
                    "x-parameter-index": 1,
                },
                "operationId": "DeviceController.replaceById",
            },
            "patch": {
                "x-controller-name": "DeviceController",
                "x-operation-name": "updateById",
                "tags": ["DeviceController"],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {"schema": {"description": "Device PATCH success"}}
                        },
                    }
                },
                "parameters": [
                    {"name": "id", "in": "path", "schema": {"type": "string"}, "required": true}
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {"$ref": "#/components/schemas/DevicePartial"}
                        }
                    },
                    "x-parameter-index": 1,
                },
                "operationId": "DeviceController.updateById",
            },
            "get": {
                "x-controller-name": "DeviceController",
                "x-operation-name": "findById",
                "tags": ["DeviceController"],
                "responses": {
                    "200": {
                        "description": "Device model instance",
                        "content": {
                            "application/json": {
                                "schema": {"$ref": "#/components/schemas/DeviceWithRelations"}
                            }
                        },
                    }
                },
                "parameters": [
                    {"name": "id", "in": "path", "schema": {"type": "string"}, "required": true},
                    {
                        "name": "filter",
                        "in": "query",
                        "content": {
                            "application/json": {
                                "schema": {"$ref": "#/components/schemas/Device.Filter"}
                            }
                        },
                    },
                ],
                "operationId": "DeviceController.findById",
            },
            "delete": {
                "x-controller-name": "DeviceController",
                "x-operation-name": "deleteById",
                "tags": ["DeviceController"],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {"schema": {"description": "Device DELETE success"}}
                        },
                    }
                },
                "parameters": [
                    {"name": "id", "in": "path", "schema": {"type": "string"}, "required": true}
                ],
                "operationId": "DeviceController.deleteById",
            },
        },
        "/devices": {
            "post": {
                "x-controller-name": "DeviceController",
                "x-operation-name": "create",
                "tags": ["DeviceController"],
                "responses": {
                    "200": {
                        "description": "Device model instance",
                        "content": {
                            "application/json": {"schema": {"$ref": "#/components/schemas/Device"}}
                        },
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {"schema": {"$ref": "#/components/schemas/NewDevice"}}
                    }
                },
                "operationId": "DeviceController.create",
            },
            "patch": {
                "x-controller-name": "DeviceController",
                "x-operation-name": "updateAll",
                "tags": ["DeviceController"],
                "responses": {
                    "200": {
                        "description": "Device PATCH success count",
                        "content": {
                            "application/json": {
                                "schema": {"$ref": "#/components/schemas/loopback.Count"}
                            }
                        },
                    }
                },
                "parameters": [
                    {
                        "name": "where",
                        "in": "query",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Device.WhereFilter",
                                    "additionalProperties": true,
                                    "x-typescript-type": "@loopback/repository#Where<Device>",
                                }
                            }
                        },
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {"$ref": "#/components/schemas/DevicePartial"}
                        }
                    }
                },
                "operationId": "DeviceController.updateAll",
            },
            "get": {
                "x-controller-name": "DeviceController",
                "x-operation-name": "find",
                "tags": ["DeviceController"],
                "responses": {
                    "200": {
                        "description": "Array of Device model instances",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {"$ref": "#/components/schemas/DeviceWithRelations"},
                                }
                            }
                        },
                    }
                },
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "content": {
                            "application/json": {
                                "schema": {"$ref": "#/components/schemas/Device.Filter1"}
                            }
                        },
                    }
                ],
                "operationId": "DeviceController.find",
            },
        },
        "/runs/count": {
            "get": {
                "x-controller-name": "RunController",
                "x-operation-name": "count",
                "tags": ["RunController"],
                "responses": {
                    "200": {
                        "description": "Run model count",
                        "content": {
                            "application/json": {
                                "schema": {"$ref": "#/components/schemas/loopback.Count"}
                            }
                        },
                    }
                },
                "parameters": [
                    {
                        "name": "where",
                        "in": "query",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Run.WhereFilter",
                                    "additionalProperties": true,
                                    "x-typescript-type": "@loopback/repository#Where<Run>",
                                }
                            }
                        },
                    }
                ],
                "operationId": "RunController.count",
            }
        },
        "/runs/{id}": {
            "put": {
                "x-controller-name": "RunController",
                "x-operation-name": "replaceById",
                "tags": ["RunController"],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {"schema": {"description": "Run PUT success"}}
                        },
                    }
                },
                "parameters": [
                    {"name": "id", "in": "path", "schema": {"type": "string"}, "required": true}
                ],
                "requestBody": {
                    "content": {
                        "application/json": {"schema": {"$ref": "#/components/schemas/Run"}}
                    },
                    "x-parameter-index": 1,
                },
                "operationId": "RunController.replaceById",
            },
            "patch": {
                "x-controller-name": "RunController",
                "x-operation-name": "updateById",
                "tags": ["RunController"],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {"schema": {"description": "Run PATCH success"}}
                        },
                    }
                },
                "parameters": [
                    {"name": "id", "in": "path", "schema": {"type": "string"}, "required": true}
                ],
                "requestBody": {
                    "content": {
                        "application/json": {"schema": {"$ref": "#/components/schemas/RunPartial"}}
                    },
                    "x-parameter-index": 1,
                },
                "operationId": "RunController.updateById",
            },
            "get": {
                "x-controller-name": "RunController",
                "x-operation-name": "findById",
                "tags": ["RunController"],
                "responses": {
                    "200": {
                        "description": "Run model instance",
                        "content": {
                            "application/json": {
                                "schema": {"$ref": "#/components/schemas/RunWithRelations"}
                            }
                        },
                    }
                },
                "parameters": [
                    {"name": "id", "in": "path", "schema": {"type": "string"}, "required": true},
                    {
                        "name": "filter",
                        "in": "query",
                        "content": {
                            "application/json": {
                                "schema": {"$ref": "#/components/schemas/Run.Filter"}
                            }
                        },
                    },
                ],
                "operationId": "RunController.findById",
            },
            "delete": {
                "x-controller-name": "RunController",
                "x-operation-name": "deleteById",
                "tags": ["RunController"],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {"schema": {"description": "Run DELETE success"}}
                        },
                    }
                },
                "parameters": [
                    {"name": "id", "in": "path", "schema": {"type": "string"}, "required": true}
                ],
                "operationId": "RunController.deleteById",
            },
        },
        "/runs": {
            "post": {
                "x-controller-name": "RunController",
                "x-operation-name": "create",
                "tags": ["RunController"],
                "responses": {
                    "200": {
                        "description": "Run model instance",
                        "content": {
                            "application/json": {"schema": {"$ref": "#/components/schemas/Run"}}
                        },
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {"schema": {"$ref": "#/components/schemas/NewRun"}}
                    }
                },
                "operationId": "RunController.create",
            },
            "patch": {
                "x-controller-name": "RunController",
                "x-operation-name": "updateAll",
                "tags": ["RunController"],
                "responses": {
                    "200": {
                        "description": "Run PATCH success count",
                        "content": {
                            "application/json": {
                                "schema": {"$ref": "#/components/schemas/loopback.Count"}
                            }
                        },
                    }
                },
                "parameters": [
                    {
                        "name": "where",
                        "in": "query",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Run.WhereFilter",
                                    "additionalProperties": true,
                                    "x-typescript-type": "@loopback/repository#Where<Run>",
                                }
                            }
                        },
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {"schema": {"$ref": "#/components/schemas/RunPartial"}}
                    }
                },
                "operationId": "RunController.updateAll",
            },
            "get": {
                "x-controller-name": "RunController",
                "x-operation-name": "find",
                "tags": ["RunController"],
                "responses": {
                    "200": {
                        "description": "Array of Run model instances",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {"$ref": "#/components/schemas/RunWithRelations"},
                                }
                            }
                        },
                    }
                },
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "content": {
                            "application/json": {
                                "schema": {"$ref": "#/components/schemas/Run.Filter1"}
                            }
                        },
                    }
                ],
                "operationId": "RunController.find",
            },
        },
        "/scans/count": {
            "get": {
                "x-controller-name": "ScanController",
                "x-operation-name": "count",
                "tags": ["ScanController"],
                "responses": {
                    "200": {
                        "description": "Scan model count",
                        "content": {
                            "application/json": {
                                "schema": {"$ref": "#/components/schemas/loopback.Count"}
                            }
                        },
                    }
                },
                "parameters": [
                    {
                        "name": "where",
                        "in": "query",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Scan.WhereFilter",
                                    "additionalProperties": true,
                                    "x-typescript-type": "@loopback/repository#Where<Scan>",
                                }
                            }
                        },
                    }
                ],
                "operationId": "ScanController.count",
            }
        },
        "/scans/{id}": {
            "put": {
                "x-controller-name": "ScanController",
                "x-operation-name": "replaceById",
                "tags": ["ScanController"],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {"schema": {"description": "Scan PUT success"}}
                        },
                    }
                },
                "parameters": [
                    {"name": "id", "in": "path", "schema": {"type": "string"}, "required": true}
                ],
                "requestBody": {
                    "content": {
                        "application/json": {"schema": {"$ref": "#/components/schemas/Scan"}}
                    },
                    "x-parameter-index": 1,
                },
                "operationId": "ScanController.replaceById",
            },
            "patch": {
                "x-controller-name": "ScanController",
                "x-operation-name": "updateById",
                "tags": ["ScanController"],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {"schema": {"description": "Scan PATCH success"}}
                        },
                    }
                },
                "parameters": [
                    {"name": "id", "in": "path", "schema": {"type": "string"}, "required": true}
                ],
                "requestBody": {
                    "content": {
                        "application/json": {"schema": {"$ref": "#/components/schemas/ScanPartial"}}
                    },
                    "x-parameter-index": 1,
                },
                "operationId": "ScanController.updateById",
            },
            "get": {
                "x-controller-name": "ScanController",
                "x-operation-name": "findById",
                "tags": ["ScanController"],
                "responses": {
                    "200": {
                        "description": "Scan model instance",
                        "content": {
                            "application/json": {
                                "schema": {"$ref": "#/components/schemas/ScanWithRelations"}
                            }
                        },
                    }
                },
                "parameters": [
                    {"name": "id", "in": "path", "schema": {"type": "string"}, "required": true},
                    {
                        "name": "filter",
                        "in": "query",
                        "content": {
                            "application/json": {
                                "schema": {"$ref": "#/components/schemas/Scan.Filter"}
                            }
                        },
                    },
                ],
                "operationId": "ScanController.findById",
            },
            "delete": {
                "x-controller-name": "ScanController",
                "x-operation-name": "deleteById",
                "tags": ["ScanController"],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {"schema": {"description": "Scan DELETE success"}}
                        },
                    }
                },
                "parameters": [
                    {"name": "id", "in": "path", "schema": {"type": "string"}, "required": true}
                ],
                "operationId": "ScanController.deleteById",
            },
        },
        "/scans": {
            "post": {
                "x-controller-name": "ScanController",
                "x-operation-name": "create",
                "tags": ["ScanController"],
                "responses": {
                    "200": {
                        "description": "Scan model instance",
                        "content": {
                            "application/json": {"schema": {"$ref": "#/components/schemas/Scan"}}
                        },
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {"schema": {"$ref": "#/components/schemas/NewScan"}}
                    }
                },
                "operationId": "ScanController.create",
            },
            "patch": {
                "x-controller-name": "ScanController",
                "x-operation-name": "updateAll",
                "tags": ["ScanController"],
                "responses": {
                    "200": {
                        "description": "Scan PATCH success count",
                        "content": {
                            "application/json": {
                                "schema": {"$ref": "#/components/schemas/loopback.Count"}
                            }
                        },
                    }
                },
                "parameters": [
                    {
                        "name": "where",
                        "in": "query",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Scan.WhereFilter",
                                    "additionalProperties": true,
                                    "x-typescript-type": "@loopback/repository#Where<Scan>",
                                }
                            }
                        },
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {"schema": {"$ref": "#/components/schemas/ScanPartial"}}
                    }
                },
                "operationId": "ScanController.updateAll",
            },
            "get": {
                "x-controller-name": "ScanController",
                "x-operation-name": "find",
                "tags": ["ScanController"],
                "responses": {
                    "200": {
                        "description": "Array of Scan model instances",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {"$ref": "#/components/schemas/ScanWithRelations"},
                                }
                            }
                        },
                    }
                },
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "content": {
                            "application/json": {
                                "schema": {"$ref": "#/components/schemas/Scan.Filter1"}
                            }
                        },
                    }
                ],
                "operationId": "ScanController.find",
            },
        },
        "/sessions/count": {
            "get": {
                "x-controller-name": "SessionController",
                "x-operation-name": "count",
                "tags": ["SessionController"],
                "responses": {
                    "200": {
                        "description": "Session model count",
                        "content": {
                            "application/json": {
                                "schema": {"$ref": "#/components/schemas/loopback.Count"}
                            }
                        },
                    }
                },
                "parameters": [
                    {
                        "name": "where",
                        "in": "query",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Session.WhereFilter",
                                    "additionalProperties": true,
                                    "x-typescript-type": "@loopback/repository#Where<Session>",
                                }
                            }
                        },
                    }
                ],
                "operationId": "SessionController.count",
            }
        },
        "/sessions/{id}": {
            "put": {
                "x-controller-name": "SessionController",
                "x-operation-name": "replaceById",
                "tags": ["SessionController"],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {"schema": {"description": "Session PUT success"}}
                        },
                    }
                },
                "parameters": [
                    {"name": "id", "in": "path", "schema": {"type": "string"}, "required": true}
                ],
                "requestBody": {
                    "content": {
                        "application/json": {"schema": {"$ref": "#/components/schemas/Session"}}
                    },
                    "x-parameter-index": 1,
                },
                "operationId": "SessionController.replaceById",
            },
            "patch": {
                "x-controller-name": "SessionController",
                "x-operation-name": "updateById",
                "tags": ["SessionController"],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {"schema": {"description": "Session PATCH success"}}
                        },
                    }
                },
                "parameters": [
                    {"name": "id", "in": "path", "schema": {"type": "string"}, "required": true}
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {"$ref": "#/components/schemas/SessionPartial"}
                        }
                    },
                    "x-parameter-index": 1,
                },
                "operationId": "SessionController.updateById",
            },
            "get": {
                "x-controller-name": "SessionController",
                "x-operation-name": "findById",
                "tags": ["SessionController"],
                "responses": {
                    "200": {
                        "description": "Session model instance",
                        "content": {
                            "application/json": {
                                "schema": {"$ref": "#/components/schemas/SessionWithRelations"}
                            }
                        },
                    }
                },
                "parameters": [
                    {"name": "id", "in": "path", "schema": {"type": "string"}, "required": true},
                    {
                        "name": "filter",
                        "in": "query",
                        "content": {
                            "application/json": {
                                "schema": {"$ref": "#/components/schemas/Session.Filter"}
                            }
                        },
                    },
                ],
                "operationId": "SessionController.findById",
            },
            "delete": {
                "x-controller-name": "SessionController",
                "x-operation-name": "deleteById",
                "tags": ["SessionController"],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "content": {
                            "application/json": {
                                "schema": {"description": "Session DELETE success"}
                            }
                        },
                    }
                },
                "parameters": [
                    {"name": "id", "in": "path", "schema": {"type": "string"}, "required": true}
                ],
                "operationId": "SessionController.deleteById",
            },
        },
        "/sessions": {
            "post": {
                "x-controller-name": "SessionController",
                "x-operation-name": "create",
                "tags": ["SessionController"],
                "responses": {
                    "200": {
                        "description": "Session model instance",
                        "content": {
                            "application/json": {"schema": {"$ref": "#/components/schemas/Session"}}
                        },
                    }
                },
                "requestBody": {
                    "content": {
                        "application/json": {"schema": {"$ref": "#/components/schemas/NewSession"}}
                    }
                },
                "operationId": "SessionController.create",
            },
            "patch": {
                "x-controller-name": "SessionController",
                "x-operation-name": "updateAll",
                "tags": ["SessionController"],
                "responses": {
                    "200": {
                        "description": "Session PATCH success count",
                        "content": {
                            "application/json": {
                                "schema": {"$ref": "#/components/schemas/loopback.Count"}
                            }
                        },
                    }
                },
                "parameters": [
                    {
                        "name": "where",
                        "in": "query",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Session.WhereFilter",
                                    "additionalProperties": true,
                                    "x-typescript-type": "@loopback/repository#Where<Session>",
                                }
                            }
                        },
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {"$ref": "#/components/schemas/SessionPartial"}
                        }
                    }
                },
                "operationId": "SessionController.updateAll",
            },
            "get": {
                "x-controller-name": "SessionController",
                "x-operation-name": "find",
                "tags": ["SessionController"],
                "responses": {
                    "200": {
                        "description": "Array of Session model instances",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {"$ref": "#/components/schemas/SessionWithRelations"},
                                }
                            }
                        },
                    }
                },
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "content": {
                            "application/json": {
                                "schema": {"$ref": "#/components/schemas/Session.Filter1"}
                            }
                        },
                    }
                ],
                "operationId": "SessionController.find",
            },
        },
    },
    "servers": [{"url": "http://docker:3030"}],
    "components": {
        "schemas": {
            "Beamline": {
                "title": "Beamline",
                "type": "object",
                "properties": {
                    "id": {"type": "string"},
                    "name": {"type": "string"},
                    "ownerGroup": {"type": "string"},
                    "accessGroups": {"type": "array", "items": {"type": "string"}},
                    "createdAt": {"type": "string", "format": "date-time"},
                    "createdBy": {"type": "string"},
                    "activeSession": {"type": "string"},
                    "activeEaccount": {"type": "string"},
                },
                "required": ["name"],
                "additionalProperties": false,
            },
            "NewBeamline": {
                "title": "NewBeamline",
                "type": "object",
                "description": "(tsType: Omit<Beamline, 'id'>, schemaOptions: { title: 'NewBeamline', exclude: [ 'id' ] })",
                "properties": {
                    "name": {"type": "string"},
                    "ownerGroup": {"type": "string"},
                    "accessGroups": {"type": "array", "items": {"type": "string"}},
                    "createdAt": {"type": "string", "format": "date-time"},
                    "createdBy": {"type": "string"},
                    "activeSession": {"type": "string"},
                    "activeEaccount": {"type": "string"},
                },
                "required": ["name"],
                "additionalProperties": false,
                "x-typescript-type": "Omit<Beamline, 'id'>",
            },
            "ScanWithRelations": {
                "title": "ScanWithRelations",
                "type": "object",
                "description": "(tsType: ScanWithRelations, schemaOptions: { includeRelations: true })",
                "properties": {
                    "id": {"type": "string"},
                    "ownerGroup": {"type": "string"},
                    "accessGroups": {"type": "array", "items": {"type": "string"}},
                    "createdAt": {"type": "string", "format": "date-time"},
                    "createdBy": {"type": "string"},
                    "updatedAt": {"type": "string", "format": "date-time"},
                    "updatedBy": {"type": "string"},
                    "scanType": {"type": "string"},
                    "queue": {"type": "string"},
                    "parameter": {"type": "object"},
                    "sessionId": {"type": "string"},
                    "parentId": {"type": "string"},
                    "session": {"$ref": "#/components/schemas/SessionWithRelations"},
                    "datasets": {
                        "type": "array",
                        "items": {"$ref": "#/components/schemas/DatasetWithRelations"},
                    },
                    "subscans": {
                        "type": "array",
                        "items": {"$ref": "#/components/schemas/ScanWithRelations"},
                    },
                    "parent": {"$ref": "#/components/schemas/ScanWithRelations"},
                },
                "additionalProperties": false,
                "x-typescript-type": "ScanWithRelations",
            },
            "DeviceWithRelations": {
                "title": "DeviceWithRelations",
                "type": "object",
                "description": "(tsType: DeviceWithRelations, schemaOptions: { includeRelations: true })",
                "properties": {
                    "id": {"type": "string"},
                    "name": {"type": "string"},
                    "description": {"type": "string"},
                    "ownerGroup": {
                        "type": "string",
                        "description": "Only members of the ownerGroup are allowed to modify this device",
                    },
                    "accessGroups": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "groups whose members have read access to this device",
                        },
                    },
                    "createdAt": {"type": "string", "format": "date-time"},
                    "createdBy": {"type": "string"},
                    "parentId": {"type": "string"},
                    "sessionId": {
                        "type": "string",
                        "description": "Session to which this device belongs.",
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "True if the device should be enabled.",
                    },
                    "enabled_set": {
                        "type": "boolean",
                        "description": "True if the device is settable.",
                    },
                    "deviceClass": {"type": "string", "description": "Ophyd device class"},
                    "deviceTags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "User-defined tags for easier access and grouping.",
                        },
                    },
                    "deviceConfig": {
                        "type": "object",
                        "description": "Device config, including the ophyd init arguments. Must at least contain name and label.",
                    },
                    "acquisitionConfig": {
                        "type": "object",
                        "description": "Config to determine the behaviour during data acquisition. Must include the fields schedule, readoutPriority and acquisitionGroup.",
                        "properties": {
                            "schedule": {
                                "description": "Acquisition scheduling.",
                                "type": "string",
                                "enum": ["sync", "async", "flyer"],
                            },
                            "acquisitionGroup": {
                                "description": "Type of device.",
                                "type": "string",
                                "enum": ["motor", "monitor", "status", "detector"],
                            },
                            "readoutPriority": {
                                "description": "Readout priority of the device during a scan.",
                                "type": "string",
                                "enum": ["monitored", "baseline", "ignored"],
                            },
                        },
                        "required": ["schedule", "acquisitionGroup", "readoutPriority"],
                    },
                    "onFailure": {
                        "type": "string",
                        "description": 'Defines how device failures are handled. "raise" raises an error immediately. "buffer" will try fall back to old values, should this not be possible, an error will be raised. "retry" will retry once before raising an error.',
                        "enum": ["raise", "retry", "buffer"],
                    },
                    "userParameter": {
                        "type": "object",
                        "description": "Additional fields for user settings such as in and out positions.",
                    },
                    "subdevices": {
                        "type": "array",
                        "items": {"$ref": "#/components/schemas/DeviceWithRelations"},
                    },
                    "parent": {"$ref": "#/components/schemas/DeviceWithRelations"},
                    "session": {"$ref": "#/components/schemas/SessionWithRelations"},
                },
                "required": ["name", "enabled", "deviceClass", "deviceConfig", "acquisitionConfig"],
                "additionalProperties": false,
                "x-typescript-type": "DeviceWithRelations",
            },
            "SessionWithRelations": {
                "title": "SessionWithRelations",
                "type": "object",
                "description": "(tsType: SessionWithRelations, schemaOptions: { includeRelations: true })",
                "properties": {
                    "id": {"type": "string"},
                    "ownerGroup": {"type": "string"},
                    "accessGroups": {"type": "array", "items": {"type": "string"}},
                    "createdAt": {"type": "string", "format": "date-time"},
                    "createdBy": {"type": "string"},
                    "name": {"type": "string"},
                    "beamlineId": {"type": "string"},
                    "beamline": {"$ref": "#/components/schemas/SessionWithRelations"},
                    "scans": {
                        "type": "array",
                        "items": {"$ref": "#/components/schemas/ScanWithRelations"},
                    },
                    "devices": {
                        "type": "array",
                        "items": {"$ref": "#/components/schemas/DeviceWithRelations"},
                    },
                },
                "required": ["name", "beamlineId"],
                "additionalProperties": false,
                "x-typescript-type": "SessionWithRelations",
            },
            "BeamlineWithRelations": {
                "title": "BeamlineWithRelations",
                "type": "object",
                "description": "(tsType: BeamlineWithRelations, schemaOptions: { includeRelations: true })",
                "properties": {
                    "id": {"type": "string"},
                    "name": {"type": "string"},
                    "ownerGroup": {"type": "string"},
                    "accessGroups": {"type": "array", "items": {"type": "string"}},
                    "createdAt": {"type": "string", "format": "date-time"},
                    "createdBy": {"type": "string"},
                    "activeSession": {"type": "string"},
                    "activeEaccount": {"type": "string"},
                    "sessions": {
                        "type": "array",
                        "items": {"$ref": "#/components/schemas/SessionWithRelations"},
                    },
                },
                "required": ["name"],
                "additionalProperties": false,
                "x-typescript-type": "BeamlineWithRelations",
            },
            "BeamlinePartial": {
                "title": "BeamlinePartial",
                "type": "object",
                "description": "(tsType: Partial<Beamline>, schemaOptions: { partial: true })",
                "properties": {
                    "id": {"type": "string"},
                    "name": {"type": "string"},
                    "ownerGroup": {"type": "string"},
                    "accessGroups": {"type": "array", "items": {"type": "string"}},
                    "createdAt": {"type": "string", "format": "date-time"},
                    "createdBy": {"type": "string"},
                    "activeSession": {"type": "string"},
                    "activeEaccount": {"type": "string"},
                },
                "additionalProperties": false,
                "x-typescript-type": "Partial<Beamline>",
            },
            "Dataset": {
                "title": "Dataset",
                "type": "object",
                "properties": {
                    "id": {"type": "string"},
                    "ownerGroup": {
                        "type": "string",
                        "description": "Only members of the ownerGroup are allowed to modify this device",
                    },
                    "accessGroups": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "groups whose members have read access to this device",
                        },
                    },
                    "name": {"type": "string"},
                    "createdAt": {"type": "string", "format": "date-time"},
                    "createdBy": {"type": "string"},
                    "updatedAt": {"type": "string", "format": "date-time"},
                    "updatedBy": {"type": "string"},
                    "scanId": {"type": "string"},
                },
                "additionalProperties": false,
            },
            "NewDataset": {
                "title": "NewDataset",
                "type": "object",
                "description": "(tsType: Omit<Dataset, 'id'>, schemaOptions: { title: 'NewDataset', exclude: [ 'id' ] })",
                "properties": {
                    "ownerGroup": {
                        "type": "string",
                        "description": "Only members of the ownerGroup are allowed to modify this device",
                    },
                    "accessGroups": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "groups whose members have read access to this device",
                        },
                    },
                    "name": {"type": "string"},
                    "createdAt": {"type": "string", "format": "date-time"},
                    "createdBy": {"type": "string"},
                    "updatedAt": {"type": "string", "format": "date-time"},
                    "updatedBy": {"type": "string"},
                    "scanId": {"type": "string"},
                },
                "additionalProperties": false,
                "x-typescript-type": "Omit<Dataset, 'id'>",
            },
            "DatasetWithRelations": {
                "title": "DatasetWithRelations",
                "type": "object",
                "description": "(tsType: DatasetWithRelations, schemaOptions: { includeRelations: true })",
                "properties": {
                    "id": {"type": "string"},
                    "ownerGroup": {
                        "type": "string",
                        "description": "Only members of the ownerGroup are allowed to modify this device",
                    },
                    "accessGroups": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "groups whose members have read access to this device",
                        },
                    },
                    "name": {"type": "string"},
                    "createdAt": {"type": "string", "format": "date-time"},
                    "createdBy": {"type": "string"},
                    "updatedAt": {"type": "string", "format": "date-time"},
                    "updatedBy": {"type": "string"},
                    "scanId": {"type": "string"},
                    "scan": {"$ref": "#/components/schemas/ScanWithRelations"},
                },
                "additionalProperties": false,
                "x-typescript-type": "DatasetWithRelations",
            },
            "DatasetPartial": {
                "title": "DatasetPartial",
                "type": "object",
                "description": "(tsType: Partial<Dataset>, schemaOptions: { partial: true })",
                "properties": {
                    "id": {"type": "string"},
                    "ownerGroup": {
                        "type": "string",
                        "description": "Only members of the ownerGroup are allowed to modify this device",
                    },
                    "accessGroups": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "groups whose members have read access to this device",
                        },
                    },
                    "name": {"type": "string"},
                    "createdAt": {"type": "string", "format": "date-time"},
                    "createdBy": {"type": "string"},
                    "updatedAt": {"type": "string", "format": "date-time"},
                    "updatedBy": {"type": "string"},
                    "scanId": {"type": "string"},
                },
                "additionalProperties": false,
                "x-typescript-type": "Partial<Dataset>",
            },
            "Device": {
                "title": "Device",
                "type": "object",
                "properties": {
                    "id": {"type": "string"},
                    "name": {"type": "string"},
                    "description": {"type": "string"},
                    "ownerGroup": {
                        "type": "string",
                        "description": "Only members of the ownerGroup are allowed to modify this device",
                    },
                    "accessGroups": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "groups whose members have read access to this device",
                        },
                    },
                    "createdAt": {"type": "string", "format": "date-time"},
                    "createdBy": {"type": "string"},
                    "parentId": {"type": "string"},
                    "sessionId": {
                        "type": "string",
                        "description": "Session to which this device belongs.",
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "True if the device should be enabled.",
                    },
                    "enabled_set": {
                        "type": "boolean",
                        "description": "True if the device is settable.",
                    },
                    "deviceClass": {"type": "string", "description": "Ophyd device class"},
                    "deviceTags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "User-defined tags for easier access and grouping.",
                        },
                    },
                    "deviceConfig": {
                        "type": "object",
                        "description": "Device config, including the ophyd init arguments. Must at least contain name and label.",
                    },
                    "acquisitionConfig": {
                        "type": "object",
                        "description": "Config to determine the behaviour during data acquisition. Must include the fields schedule, readoutPriority and acquisitionGroup.",
                        "properties": {
                            "schedule": {
                                "description": "Acquisition scheduling.",
                                "type": "string",
                                "enum": ["sync", "async", "flyer"],
                            },
                            "acquisitionGroup": {
                                "description": "Type of device.",
                                "type": "string",
                                "enum": ["motor", "monitor", "status", "detector"],
                            },
                            "readoutPriority": {
                                "description": "Readout priority of the device during a scan.",
                                "type": "string",
                                "enum": ["monitored", "baseline", "ignored"],
                            },
                        },
                        "required": ["schedule", "acquisitionGroup", "readoutPriority"],
                    },
                    "onFailure": {
                        "type": "string",
                        "description": 'Defines how device failures are handled. "raise" raises an error immediately. "buffer" will try fall back to old values, should this not be possible, an error will be raised. "retry" will retry once before raising an error.',
                        "enum": ["raise", "retry", "buffer"],
                    },
                    "userParameter": {
                        "type": "object",
                        "description": "Additional fields for user settings such as in and out positions.",
                    },
                },
                "required": ["name", "enabled", "deviceClass", "deviceConfig", "acquisitionConfig"],
                "additionalProperties": false,
            },
            "NewDevice": {
                "title": "NewDevice",
                "type": "object",
                "description": "(tsType: Omit<Device, 'id'>, schemaOptions: { title: 'NewDevice', exclude: [ 'id' ] })",
                "properties": {
                    "name": {"type": "string"},
                    "description": {"type": "string"},
                    "ownerGroup": {
                        "type": "string",
                        "description": "Only members of the ownerGroup are allowed to modify this device",
                    },
                    "accessGroups": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "groups whose members have read access to this device",
                        },
                    },
                    "createdAt": {"type": "string", "format": "date-time"},
                    "createdBy": {"type": "string"},
                    "parentId": {"type": "string"},
                    "sessionId": {
                        "type": "string",
                        "description": "Session to which this device belongs.",
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "True if the device should be enabled.",
                    },
                    "enabled_set": {
                        "type": "boolean",
                        "description": "True if the device is settable.",
                    },
                    "deviceClass": {"type": "string", "description": "Ophyd device class"},
                    "deviceTags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "User-defined tags for easier access and grouping.",
                        },
                    },
                    "deviceConfig": {
                        "type": "object",
                        "description": "Device config, including the ophyd init arguments. Must at least contain name and label.",
                    },
                    "acquisitionConfig": {
                        "type": "object",
                        "description": "Config to determine the behaviour during data acquisition. Must include the fields schedule, readoutPriority and acquisitionGroup.",
                        "properties": {
                            "schedule": {
                                "description": "Acquisition scheduling.",
                                "type": "string",
                                "enum": ["sync", "async", "flyer"],
                            },
                            "acquisitionGroup": {
                                "description": "Type of device.",
                                "type": "string",
                                "enum": ["motor", "monitor", "status", "detector"],
                            },
                            "readoutPriority": {
                                "description": "Readout priority of the device during a scan.",
                                "type": "string",
                                "enum": ["monitored", "baseline", "ignored"],
                            },
                        },
                        "required": ["schedule", "acquisitionGroup", "readoutPriority"],
                    },
                    "onFailure": {
                        "type": "string",
                        "description": 'Defines how device failures are handled. "raise" raises an error immediately. "buffer" will try fall back to old values, should this not be possible, an error will be raised. "retry" will retry once before raising an error.',
                        "enum": ["raise", "retry", "buffer"],
                    },
                    "userParameter": {
                        "type": "object",
                        "description": "Additional fields for user settings such as in and out positions.",
                    },
                },
                "required": ["name", "enabled", "deviceClass", "deviceConfig", "acquisitionConfig"],
                "additionalProperties": false,
                "x-typescript-type": "Omit<Device, 'id'>",
            },
            "DevicePartial": {
                "title": "DevicePartial",
                "type": "object",
                "description": "(tsType: Partial<Device>, schemaOptions: { partial: true })",
                "properties": {
                    "id": {"type": "string"},
                    "name": {"type": "string"},
                    "description": {"type": "string"},
                    "ownerGroup": {
                        "type": "string",
                        "description": "Only members of the ownerGroup are allowed to modify this device",
                    },
                    "accessGroups": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "groups whose members have read access to this device",
                        },
                    },
                    "createdAt": {"type": "string", "format": "date-time"},
                    "createdBy": {"type": "string"},
                    "parentId": {"type": "string"},
                    "sessionId": {
                        "type": "string",
                        "description": "Session to which this device belongs.",
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "True if the device should be enabled.",
                    },
                    "enabled_set": {
                        "type": "boolean",
                        "description": "True if the device is settable.",
                    },
                    "deviceClass": {"type": "string", "description": "Ophyd device class"},
                    "deviceTags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "description": "User-defined tags for easier access and grouping.",
                        },
                    },
                    "deviceConfig": {
                        "type": "object",
                        "description": "Device config, including the ophyd init arguments. Must at least contain name and label.",
                    },
                    "acquisitionConfig": {
                        "type": "object",
                        "description": "Config to determine the behaviour during data acquisition. Must include the fields schedule, readoutPriority and acquisitionGroup.",
                        "properties": {
                            "schedule": {
                                "description": "Acquisition scheduling.",
                                "type": "string",
                                "enum": ["sync", "async", "flyer"],
                            },
                            "acquisitionGroup": {
                                "description": "Type of device.",
                                "type": "string",
                                "enum": ["motor", "monitor", "status", "detector"],
                            },
                            "readoutPriority": {
                                "description": "Readout priority of the device during a scan.",
                                "type": "string",
                                "enum": ["monitored", "baseline", "ignored"],
                            },
                        },
                        "required": ["schedule", "acquisitionGroup", "readoutPriority"],
                    },
                    "onFailure": {
                        "type": "string",
                        "description": 'Defines how device failures are handled. "raise" raises an error immediately. "buffer" will try fall back to old values, should this not be possible, an error will be raised. "retry" will retry once before raising an error.',
                        "enum": ["raise", "retry", "buffer"],
                    },
                    "userParameter": {
                        "type": "object",
                        "description": "Additional fields for user settings such as in and out positions.",
                    },
                },
                "additionalProperties": false,
                "x-typescript-type": "Partial<Device>",
            },
            "Run": {
                "title": "Run",
                "type": "object",
                "properties": {
                    "id": {"type": "string"},
                    "ownerGroup": {"type": "string"},
                    "accessGroups": {"type": "array", "items": {"type": "string"}},
                    "createdAt": {"type": "string", "format": "date-time"},
                    "createdBy": {"type": "string"},
                },
                "additionalProperties": false,
            },
            "NewRun": {
                "title": "NewRun",
                "type": "object",
                "description": "(tsType: Omit<Run, 'id'>, schemaOptions: { title: 'NewRun', exclude: [ 'id' ] })",
                "properties": {
                    "ownerGroup": {"type": "string"},
                    "accessGroups": {"type": "array", "items": {"type": "string"}},
                    "createdAt": {"type": "string", "format": "date-time"},
                    "createdBy": {"type": "string"},
                },
                "additionalProperties": false,
                "x-typescript-type": "Omit<Run, 'id'>",
            },
            "RunWithRelations": {
                "title": "RunWithRelations",
                "type": "object",
                "description": "(tsType: RunWithRelations, schemaOptions: { includeRelations: true })",
                "properties": {
                    "id": {"type": "string"},
                    "ownerGroup": {"type": "string"},
                    "accessGroups": {"type": "array", "items": {"type": "string"}},
                    "createdAt": {"type": "string", "format": "date-time"},
                    "createdBy": {"type": "string"},
                },
                "additionalProperties": false,
                "x-typescript-type": "RunWithRelations",
            },
            "RunPartial": {
                "title": "RunPartial",
                "type": "object",
                "description": "(tsType: Partial<Run>, schemaOptions: { partial: true })",
                "properties": {
                    "id": {"type": "string"},
                    "ownerGroup": {"type": "string"},
                    "accessGroups": {"type": "array", "items": {"type": "string"}},
                    "createdAt": {"type": "string", "format": "date-time"},
                    "createdBy": {"type": "string"},
                },
                "additionalProperties": false,
                "x-typescript-type": "Partial<Run>",
            },
            "Scan": {
                "title": "Scan",
                "type": "object",
                "properties": {
                    "id": {"type": "string"},
                    "ownerGroup": {"type": "string"},
                    "accessGroups": {"type": "array", "items": {"type": "string"}},
                    "createdAt": {"type": "string", "format": "date-time"},
                    "createdBy": {"type": "string"},
                    "updatedAt": {"type": "string", "format": "date-time"},
                    "updatedBy": {"type": "string"},
                    "scanType": {"type": "string"},
                    "queue": {"type": "string"},
                    "parameter": {"type": "object"},
                    "sessionId": {"type": "string"},
                    "parentId": {"type": "string"},
                },
                "additionalProperties": false,
            },
            "NewScan": {
                "title": "NewScan",
                "type": "object",
                "description": "(tsType: Omit<Scan, 'id'>, schemaOptions: { title: 'NewScan', exclude: [ 'id' ] })",
                "properties": {
                    "ownerGroup": {"type": "string"},
                    "accessGroups": {"type": "array", "items": {"type": "string"}},
                    "createdAt": {"type": "string", "format": "date-time"},
                    "createdBy": {"type": "string"},
                    "updatedAt": {"type": "string", "format": "date-time"},
                    "updatedBy": {"type": "string"},
                    "scanType": {"type": "string"},
                    "queue": {"type": "string"},
                    "parameter": {"type": "object"},
                    "sessionId": {"type": "string"},
                    "parentId": {"type": "string"},
                },
                "additionalProperties": false,
                "x-typescript-type": "Omit<Scan, 'id'>",
            },
            "ScanPartial": {
                "title": "ScanPartial",
                "type": "object",
                "description": "(tsType: Partial<Scan>, schemaOptions: { partial: true })",
                "properties": {
                    "id": {"type": "string"},
                    "ownerGroup": {"type": "string"},
                    "accessGroups": {"type": "array", "items": {"type": "string"}},
                    "createdAt": {"type": "string", "format": "date-time"},
                    "createdBy": {"type": "string"},
                    "updatedAt": {"type": "string", "format": "date-time"},
                    "updatedBy": {"type": "string"},
                    "scanType": {"type": "string"},
                    "queue": {"type": "string"},
                    "parameter": {"type": "object"},
                    "sessionId": {"type": "string"},
                    "parentId": {"type": "string"},
                },
                "additionalProperties": false,
                "x-typescript-type": "Partial<Scan>",
            },
            "Session": {
                "title": "Session",
                "type": "object",
                "properties": {
                    "id": {"type": "string"},
                    "ownerGroup": {"type": "string"},
                    "accessGroups": {"type": "array", "items": {"type": "string"}},
                    "createdAt": {"type": "string", "format": "date-time"},
                    "createdBy": {"type": "string"},
                    "name": {"type": "string"},
                    "beamlineId": {"type": "string"},
                },
                "required": ["name", "beamlineId"],
                "additionalProperties": false,
            },
            "NewSession": {
                "title": "NewSession",
                "type": "object",
                "description": "(tsType: Omit<Session, 'id'>, schemaOptions: { title: 'NewSession', exclude: [ 'id' ] })",
                "properties": {
                    "ownerGroup": {"type": "string"},
                    "accessGroups": {"type": "array", "items": {"type": "string"}},
                    "createdAt": {"type": "string", "format": "date-time"},
                    "createdBy": {"type": "string"},
                    "name": {"type": "string"},
                    "beamlineId": {"type": "string"},
                },
                "required": ["name", "beamlineId"],
                "additionalProperties": false,
                "x-typescript-type": "Omit<Session, 'id'>",
            },
            "SessionPartial": {
                "title": "SessionPartial",
                "type": "object",
                "description": "(tsType: Partial<Session>, schemaOptions: { partial: true })",
                "properties": {
                    "id": {"type": "string"},
                    "ownerGroup": {"type": "string"},
                    "accessGroups": {"type": "array", "items": {"type": "string"}},
                    "createdAt": {"type": "string", "format": "date-time"},
                    "createdBy": {"type": "string"},
                    "name": {"type": "string"},
                    "beamlineId": {"type": "string"},
                },
                "additionalProperties": false,
                "x-typescript-type": "Partial<Session>",
            },
            "loopback.Count": {
                "type": "object",
                "title": "loopback.Count",
                "x-typescript-type": "@loopback/repository#Count",
                "properties": {"count": {"type": "number"}},
            },
            "Beamline.ScopeFilter": {
                "properties": {
                    "offset": {"type": "integer", "minimum": 0},
                    "limit": {"type": "integer", "minimum": 1, "example": 100},
                    "skip": {"type": "integer", "minimum": 0},
                    "order": {
                        "oneOf": [
                            {"type": "string"},
                            {"type": "array", "items": {"type": "string"}},
                        ]
                    },
                    "where": {"type": "object", "additionalProperties": true},
                    "fields": {
                        "oneOf": [
                            {"type": "object", "properties": {}, "additionalProperties": true},
                            {"type": "array", "items": {"type": "string"}, "uniqueItems": true},
                        ]
                    },
                    "include": {
                        "type": "array",
                        "items": {"type": "object", "properties": {}, "additionalProperties": true},
                    },
                },
                "additionalProperties": false,
                "title": "Beamline.ScopeFilter",
            },
            "Beamline.IncludeFilter.Items": {
                "title": "Beamline.IncludeFilter.Items",
                "type": "object",
                "properties": {
                    "relation": {"type": "string"},
                    "scope": {"$ref": "#/components/schemas/Beamline.ScopeFilter"},
                },
            },
            "Beamline.Filter": {
                "type": "object",
                "title": "Beamline.Filter",
                "properties": {
                    "offset": {"type": "integer", "minimum": 0},
                    "limit": {"type": "integer", "minimum": 1, "example": 100},
                    "skip": {"type": "integer", "minimum": 0},
                    "order": {
                        "oneOf": [
                            {"type": "string"},
                            {"type": "array", "items": {"type": "string"}},
                        ]
                    },
                    "fields": {
                        "oneOf": [
                            {
                                "type": "object",
                                "properties": {
                                    "id": {"type": "boolean"},
                                    "name": {"type": "boolean"},
                                    "ownerGroup": {"type": "boolean"},
                                    "accessGroups": {"type": "boolean"},
                                    "createdAt": {"type": "boolean"},
                                    "createdBy": {"type": "boolean"},
                                    "activeSession": {"type": "boolean"},
                                    "activeEaccount": {"type": "boolean"},
                                },
                                "additionalProperties": false,
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "id",
                                        "name",
                                        "ownerGroup",
                                        "accessGroups",
                                        "createdAt",
                                        "createdBy",
                                        "activeSession",
                                        "activeEaccount",
                                    ],
                                    "example": "id",
                                },
                                "uniqueItems": true,
                            },
                        ],
                        "title": "Beamline.Fields",
                    },
                    "include": {
                        "title": "Beamline.IncludeFilter",
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {"$ref": "#/components/schemas/Beamline.IncludeFilter.Items"},
                                {"type": "string"},
                            ]
                        },
                    },
                },
                "additionalProperties": false,
                "x-typescript-type": "@loopback/repository#Filter<Beamline>",
            },
            "Beamline.Filter1": {
                "type": "object",
                "title": "Beamline.Filter",
                "properties": {
                    "offset": {"type": "integer", "minimum": 0},
                    "limit": {"type": "integer", "minimum": 1, "example": 100},
                    "skip": {"type": "integer", "minimum": 0},
                    "order": {
                        "oneOf": [
                            {"type": "string"},
                            {"type": "array", "items": {"type": "string"}},
                        ]
                    },
                    "where": {
                        "title": "Beamline.WhereFilter",
                        "type": "object",
                        "additionalProperties": true,
                    },
                    "fields": {
                        "oneOf": [
                            {
                                "type": "object",
                                "properties": {
                                    "id": {"type": "boolean"},
                                    "name": {"type": "boolean"},
                                    "ownerGroup": {"type": "boolean"},
                                    "accessGroups": {"type": "boolean"},
                                    "createdAt": {"type": "boolean"},
                                    "createdBy": {"type": "boolean"},
                                    "activeSession": {"type": "boolean"},
                                    "activeEaccount": {"type": "boolean"},
                                },
                                "additionalProperties": false,
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "id",
                                        "name",
                                        "ownerGroup",
                                        "accessGroups",
                                        "createdAt",
                                        "createdBy",
                                        "activeSession",
                                        "activeEaccount",
                                    ],
                                    "example": "id",
                                },
                                "uniqueItems": true,
                            },
                        ],
                        "title": "Beamline.Fields",
                    },
                    "include": {
                        "title": "Beamline.IncludeFilter",
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {"$ref": "#/components/schemas/Beamline.IncludeFilter.Items"},
                                {"type": "string"},
                            ]
                        },
                    },
                },
                "additionalProperties": false,
                "x-typescript-type": "@loopback/repository#Filter<Beamline>",
            },
            "Dataset.ScopeFilter": {
                "properties": {
                    "offset": {"type": "integer", "minimum": 0},
                    "limit": {"type": "integer", "minimum": 1, "example": 100},
                    "skip": {"type": "integer", "minimum": 0},
                    "order": {
                        "oneOf": [
                            {"type": "string"},
                            {"type": "array", "items": {"type": "string"}},
                        ]
                    },
                    "where": {"type": "object", "additionalProperties": true},
                    "fields": {
                        "oneOf": [
                            {"type": "object", "properties": {}, "additionalProperties": true},
                            {"type": "array", "items": {"type": "string"}, "uniqueItems": true},
                        ]
                    },
                    "include": {
                        "type": "array",
                        "items": {"type": "object", "properties": {}, "additionalProperties": true},
                    },
                },
                "additionalProperties": false,
                "title": "Dataset.ScopeFilter",
            },
            "Dataset.IncludeFilter.Items": {
                "title": "Dataset.IncludeFilter.Items",
                "type": "object",
                "properties": {
                    "relation": {"type": "string"},
                    "scope": {"$ref": "#/components/schemas/Dataset.ScopeFilter"},
                },
            },
            "Dataset.Filter": {
                "type": "object",
                "title": "Dataset.Filter",
                "properties": {
                    "offset": {"type": "integer", "minimum": 0},
                    "limit": {"type": "integer", "minimum": 1, "example": 100},
                    "skip": {"type": "integer", "minimum": 0},
                    "order": {
                        "oneOf": [
                            {"type": "string"},
                            {"type": "array", "items": {"type": "string"}},
                        ]
                    },
                    "fields": {
                        "oneOf": [
                            {
                                "type": "object",
                                "properties": {
                                    "id": {"type": "boolean"},
                                    "ownerGroup": {"type": "boolean"},
                                    "accessGroups": {"type": "boolean"},
                                    "name": {"type": "boolean"},
                                    "createdAt": {"type": "boolean"},
                                    "createdBy": {"type": "boolean"},
                                    "updatedAt": {"type": "boolean"},
                                    "updatedBy": {"type": "boolean"},
                                    "scanId": {"type": "boolean"},
                                },
                                "additionalProperties": false,
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "id",
                                        "ownerGroup",
                                        "accessGroups",
                                        "name",
                                        "createdAt",
                                        "createdBy",
                                        "updatedAt",
                                        "updatedBy",
                                        "scanId",
                                    ],
                                    "example": "id",
                                },
                                "uniqueItems": true,
                            },
                        ],
                        "title": "Dataset.Fields",
                    },
                    "include": {
                        "title": "Dataset.IncludeFilter",
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {"$ref": "#/components/schemas/Dataset.IncludeFilter.Items"},
                                {"type": "string"},
                            ]
                        },
                    },
                },
                "additionalProperties": false,
                "x-typescript-type": "@loopback/repository#Filter<Dataset>",
            },
            "Dataset.Filter1": {
                "type": "object",
                "title": "Dataset.Filter",
                "properties": {
                    "offset": {"type": "integer", "minimum": 0},
                    "limit": {"type": "integer", "minimum": 1, "example": 100},
                    "skip": {"type": "integer", "minimum": 0},
                    "order": {
                        "oneOf": [
                            {"type": "string"},
                            {"type": "array", "items": {"type": "string"}},
                        ]
                    },
                    "where": {
                        "title": "Dataset.WhereFilter",
                        "type": "object",
                        "additionalProperties": true,
                    },
                    "fields": {
                        "oneOf": [
                            {
                                "type": "object",
                                "properties": {
                                    "id": {"type": "boolean"},
                                    "ownerGroup": {"type": "boolean"},
                                    "accessGroups": {"type": "boolean"},
                                    "name": {"type": "boolean"},
                                    "createdAt": {"type": "boolean"},
                                    "createdBy": {"type": "boolean"},
                                    "updatedAt": {"type": "boolean"},
                                    "updatedBy": {"type": "boolean"},
                                    "scanId": {"type": "boolean"},
                                },
                                "additionalProperties": false,
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "id",
                                        "ownerGroup",
                                        "accessGroups",
                                        "name",
                                        "createdAt",
                                        "createdBy",
                                        "updatedAt",
                                        "updatedBy",
                                        "scanId",
                                    ],
                                    "example": "id",
                                },
                                "uniqueItems": true,
                            },
                        ],
                        "title": "Dataset.Fields",
                    },
                    "include": {
                        "title": "Dataset.IncludeFilter",
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {"$ref": "#/components/schemas/Dataset.IncludeFilter.Items"},
                                {"type": "string"},
                            ]
                        },
                    },
                },
                "additionalProperties": false,
                "x-typescript-type": "@loopback/repository#Filter<Dataset>",
            },
            "Device.ScopeFilter": {
                "properties": {
                    "offset": {"type": "integer", "minimum": 0},
                    "limit": {"type": "integer", "minimum": 1, "example": 100},
                    "skip": {"type": "integer", "minimum": 0},
                    "order": {
                        "oneOf": [
                            {"type": "string"},
                            {"type": "array", "items": {"type": "string"}},
                        ]
                    },
                    "where": {"type": "object", "additionalProperties": true},
                    "fields": {
                        "oneOf": [
                            {"type": "object", "properties": {}, "additionalProperties": true},
                            {"type": "array", "items": {"type": "string"}, "uniqueItems": true},
                        ]
                    },
                    "include": {
                        "type": "array",
                        "items": {"type": "object", "properties": {}, "additionalProperties": true},
                    },
                },
                "additionalProperties": false,
                "title": "Device.ScopeFilter",
            },
            "Device.IncludeFilter.Items": {
                "title": "Device.IncludeFilter.Items",
                "type": "object",
                "properties": {
                    "relation": {"type": "string"},
                    "scope": {"$ref": "#/components/schemas/Device.ScopeFilter"},
                },
            },
            "Device.Filter": {
                "type": "object",
                "title": "Device.Filter",
                "properties": {
                    "offset": {"type": "integer", "minimum": 0},
                    "limit": {"type": "integer", "minimum": 1, "example": 100},
                    "skip": {"type": "integer", "minimum": 0},
                    "order": {
                        "oneOf": [
                            {"type": "string"},
                            {"type": "array", "items": {"type": "string"}},
                        ]
                    },
                    "fields": {
                        "oneOf": [
                            {
                                "type": "object",
                                "properties": {
                                    "id": {"type": "boolean"},
                                    "name": {"type": "boolean"},
                                    "description": {"type": "boolean"},
                                    "ownerGroup": {"type": "boolean"},
                                    "accessGroups": {"type": "boolean"},
                                    "createdAt": {"type": "boolean"},
                                    "createdBy": {"type": "boolean"},
                                    "parentId": {"type": "boolean"},
                                    "sessionId": {"type": "boolean"},
                                    "enabled": {"type": "boolean"},
                                    "enabled_set": {"type": "boolean"},
                                    "deviceClass": {"type": "boolean"},
                                    "deviceTags": {"type": "boolean"},
                                    "deviceConfig": {"type": "boolean"},
                                    "acquisitionConfig": {"type": "boolean"},
                                    "onFailure": {"type": "boolean"},
                                    "userParameter": {"type": "boolean"},
                                },
                                "additionalProperties": false,
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "id",
                                        "name",
                                        "description",
                                        "ownerGroup",
                                        "accessGroups",
                                        "createdAt",
                                        "createdBy",
                                        "parentId",
                                        "sessionId",
                                        "enabled",
                                        "enabled_set",
                                        "deviceClass",
                                        "deviceTags",
                                        "deviceConfig",
                                        "acquisitionConfig",
                                        "onFailure",
                                        "userParameter",
                                    ],
                                    "example": "id",
                                },
                                "uniqueItems": true,
                            },
                        ],
                        "title": "Device.Fields",
                    },
                    "include": {
                        "title": "Device.IncludeFilter",
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {"$ref": "#/components/schemas/Device.IncludeFilter.Items"},
                                {"type": "string"},
                            ]
                        },
                    },
                },
                "additionalProperties": false,
                "x-typescript-type": "@loopback/repository#Filter<Device>",
            },
            "Device.Filter1": {
                "type": "object",
                "title": "Device.Filter",
                "properties": {
                    "offset": {"type": "integer", "minimum": 0},
                    "limit": {"type": "integer", "minimum": 1, "example": 100},
                    "skip": {"type": "integer", "minimum": 0},
                    "order": {
                        "oneOf": [
                            {"type": "string"},
                            {"type": "array", "items": {"type": "string"}},
                        ]
                    },
                    "where": {
                        "title": "Device.WhereFilter",
                        "type": "object",
                        "additionalProperties": true,
                    },
                    "fields": {
                        "oneOf": [
                            {
                                "type": "object",
                                "properties": {
                                    "id": {"type": "boolean"},
                                    "name": {"type": "boolean"},
                                    "description": {"type": "boolean"},
                                    "ownerGroup": {"type": "boolean"},
                                    "accessGroups": {"type": "boolean"},
                                    "createdAt": {"type": "boolean"},
                                    "createdBy": {"type": "boolean"},
                                    "parentId": {"type": "boolean"},
                                    "sessionId": {"type": "boolean"},
                                    "enabled": {"type": "boolean"},
                                    "enabled_set": {"type": "boolean"},
                                    "deviceClass": {"type": "boolean"},
                                    "deviceTags": {"type": "boolean"},
                                    "deviceConfig": {"type": "boolean"},
                                    "acquisitionConfig": {"type": "boolean"},
                                    "onFailure": {"type": "boolean"},
                                    "userParameter": {"type": "boolean"},
                                },
                                "additionalProperties": false,
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "id",
                                        "name",
                                        "description",
                                        "ownerGroup",
                                        "accessGroups",
                                        "createdAt",
                                        "createdBy",
                                        "parentId",
                                        "sessionId",
                                        "enabled",
                                        "enabled_set",
                                        "deviceClass",
                                        "deviceTags",
                                        "deviceConfig",
                                        "acquisitionConfig",
                                        "onFailure",
                                        "userParameter",
                                    ],
                                    "example": "id",
                                },
                                "uniqueItems": true,
                            },
                        ],
                        "title": "Device.Fields",
                    },
                    "include": {
                        "title": "Device.IncludeFilter",
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {"$ref": "#/components/schemas/Device.IncludeFilter.Items"},
                                {"type": "string"},
                            ]
                        },
                    },
                },
                "additionalProperties": false,
                "x-typescript-type": "@loopback/repository#Filter<Device>",
            },
            "Run.Filter": {
                "type": "object",
                "title": "Run.Filter",
                "properties": {
                    "offset": {"type": "integer", "minimum": 0},
                    "limit": {"type": "integer", "minimum": 1, "example": 100},
                    "skip": {"type": "integer", "minimum": 0},
                    "order": {
                        "oneOf": [
                            {"type": "string"},
                            {"type": "array", "items": {"type": "string"}},
                        ]
                    },
                    "fields": {
                        "oneOf": [
                            {
                                "type": "object",
                                "properties": {
                                    "id": {"type": "boolean"},
                                    "ownerGroup": {"type": "boolean"},
                                    "accessGroups": {"type": "boolean"},
                                    "createdAt": {"type": "boolean"},
                                    "createdBy": {"type": "boolean"},
                                },
                                "additionalProperties": false,
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "id",
                                        "ownerGroup",
                                        "accessGroups",
                                        "createdAt",
                                        "createdBy",
                                    ],
                                    "example": "id",
                                },
                                "uniqueItems": true,
                            },
                        ],
                        "title": "Run.Fields",
                    },
                },
                "additionalProperties": false,
                "x-typescript-type": "@loopback/repository#Filter<Run>",
            },
            "Run.Filter1": {
                "type": "object",
                "title": "Run.Filter",
                "properties": {
                    "offset": {"type": "integer", "minimum": 0},
                    "limit": {"type": "integer", "minimum": 1, "example": 100},
                    "skip": {"type": "integer", "minimum": 0},
                    "order": {
                        "oneOf": [
                            {"type": "string"},
                            {"type": "array", "items": {"type": "string"}},
                        ]
                    },
                    "where": {
                        "title": "Run.WhereFilter",
                        "type": "object",
                        "additionalProperties": true,
                    },
                    "fields": {
                        "oneOf": [
                            {
                                "type": "object",
                                "properties": {
                                    "id": {"type": "boolean"},
                                    "ownerGroup": {"type": "boolean"},
                                    "accessGroups": {"type": "boolean"},
                                    "createdAt": {"type": "boolean"},
                                    "createdBy": {"type": "boolean"},
                                },
                                "additionalProperties": false,
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "id",
                                        "ownerGroup",
                                        "accessGroups",
                                        "createdAt",
                                        "createdBy",
                                    ],
                                    "example": "id",
                                },
                                "uniqueItems": true,
                            },
                        ],
                        "title": "Run.Fields",
                    },
                },
                "additionalProperties": false,
                "x-typescript-type": "@loopback/repository#Filter<Run>",
            },
            "Scan.ScopeFilter": {
                "properties": {
                    "offset": {"type": "integer", "minimum": 0},
                    "limit": {"type": "integer", "minimum": 1, "example": 100},
                    "skip": {"type": "integer", "minimum": 0},
                    "order": {
                        "oneOf": [
                            {"type": "string"},
                            {"type": "array", "items": {"type": "string"}},
                        ]
                    },
                    "where": {"type": "object", "additionalProperties": true},
                    "fields": {
                        "oneOf": [
                            {"type": "object", "properties": {}, "additionalProperties": true},
                            {"type": "array", "items": {"type": "string"}, "uniqueItems": true},
                        ]
                    },
                    "include": {
                        "type": "array",
                        "items": {"type": "object", "properties": {}, "additionalProperties": true},
                    },
                },
                "additionalProperties": false,
                "title": "Scan.ScopeFilter",
            },
            "Scan.IncludeFilter.Items": {
                "title": "Scan.IncludeFilter.Items",
                "type": "object",
                "properties": {
                    "relation": {"type": "string"},
                    "scope": {"$ref": "#/components/schemas/Scan.ScopeFilter"},
                },
            },
            "Scan.Filter": {
                "type": "object",
                "title": "Scan.Filter",
                "properties": {
                    "offset": {"type": "integer", "minimum": 0},
                    "limit": {"type": "integer", "minimum": 1, "example": 100},
                    "skip": {"type": "integer", "minimum": 0},
                    "order": {
                        "oneOf": [
                            {"type": "string"},
                            {"type": "array", "items": {"type": "string"}},
                        ]
                    },
                    "fields": {
                        "oneOf": [
                            {
                                "type": "object",
                                "properties": {
                                    "id": {"type": "boolean"},
                                    "ownerGroup": {"type": "boolean"},
                                    "accessGroups": {"type": "boolean"},
                                    "createdAt": {"type": "boolean"},
                                    "createdBy": {"type": "boolean"},
                                    "updatedAt": {"type": "boolean"},
                                    "updatedBy": {"type": "boolean"},
                                    "scanType": {"type": "boolean"},
                                    "queue": {"type": "boolean"},
                                    "parameter": {"type": "boolean"},
                                    "sessionId": {"type": "boolean"},
                                    "parentId": {"type": "boolean"},
                                },
                                "additionalProperties": false,
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "id",
                                        "ownerGroup",
                                        "accessGroups",
                                        "createdAt",
                                        "createdBy",
                                        "updatedAt",
                                        "updatedBy",
                                        "scanType",
                                        "queue",
                                        "parameter",
                                        "sessionId",
                                        "parentId",
                                    ],
                                    "example": "id",
                                },
                                "uniqueItems": true,
                            },
                        ],
                        "title": "Scan.Fields",
                    },
                    "include": {
                        "title": "Scan.IncludeFilter",
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {"$ref": "#/components/schemas/Scan.IncludeFilter.Items"},
                                {"type": "string"},
                            ]
                        },
                    },
                },
                "additionalProperties": false,
                "x-typescript-type": "@loopback/repository#Filter<Scan>",
            },
            "Scan.Filter1": {
                "type": "object",
                "title": "Scan.Filter",
                "properties": {
                    "offset": {"type": "integer", "minimum": 0},
                    "limit": {"type": "integer", "minimum": 1, "example": 100},
                    "skip": {"type": "integer", "minimum": 0},
                    "order": {
                        "oneOf": [
                            {"type": "string"},
                            {"type": "array", "items": {"type": "string"}},
                        ]
                    },
                    "where": {
                        "title": "Scan.WhereFilter",
                        "type": "object",
                        "additionalProperties": true,
                    },
                    "fields": {
                        "oneOf": [
                            {
                                "type": "object",
                                "properties": {
                                    "id": {"type": "boolean"},
                                    "ownerGroup": {"type": "boolean"},
                                    "accessGroups": {"type": "boolean"},
                                    "createdAt": {"type": "boolean"},
                                    "createdBy": {"type": "boolean"},
                                    "updatedAt": {"type": "boolean"},
                                    "updatedBy": {"type": "boolean"},
                                    "scanType": {"type": "boolean"},
                                    "queue": {"type": "boolean"},
                                    "parameter": {"type": "boolean"},
                                    "sessionId": {"type": "boolean"},
                                    "parentId": {"type": "boolean"},
                                },
                                "additionalProperties": false,
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "id",
                                        "ownerGroup",
                                        "accessGroups",
                                        "createdAt",
                                        "createdBy",
                                        "updatedAt",
                                        "updatedBy",
                                        "scanType",
                                        "queue",
                                        "parameter",
                                        "sessionId",
                                        "parentId",
                                    ],
                                    "example": "id",
                                },
                                "uniqueItems": true,
                            },
                        ],
                        "title": "Scan.Fields",
                    },
                    "include": {
                        "title": "Scan.IncludeFilter",
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {"$ref": "#/components/schemas/Scan.IncludeFilter.Items"},
                                {"type": "string"},
                            ]
                        },
                    },
                },
                "additionalProperties": false,
                "x-typescript-type": "@loopback/repository#Filter<Scan>",
            },
            "Session.ScopeFilter": {
                "properties": {
                    "offset": {"type": "integer", "minimum": 0},
                    "limit": {"type": "integer", "minimum": 1, "example": 100},
                    "skip": {"type": "integer", "minimum": 0},
                    "order": {
                        "oneOf": [
                            {"type": "string"},
                            {"type": "array", "items": {"type": "string"}},
                        ]
                    },
                    "where": {"type": "object", "additionalProperties": true},
                    "fields": {
                        "oneOf": [
                            {"type": "object", "properties": {}, "additionalProperties": true},
                            {"type": "array", "items": {"type": "string"}, "uniqueItems": true},
                        ]
                    },
                    "include": {
                        "type": "array",
                        "items": {"type": "object", "properties": {}, "additionalProperties": true},
                    },
                },
                "additionalProperties": false,
                "title": "Session.ScopeFilter",
            },
            "Session.IncludeFilter.Items": {
                "title": "Session.IncludeFilter.Items",
                "type": "object",
                "properties": {
                    "relation": {"type": "string"},
                    "scope": {"$ref": "#/components/schemas/Session.ScopeFilter"},
                },
            },
            "Session.Filter": {
                "type": "object",
                "title": "Session.Filter",
                "properties": {
                    "offset": {"type": "integer", "minimum": 0},
                    "limit": {"type": "integer", "minimum": 1, "example": 100},
                    "skip": {"type": "integer", "minimum": 0},
                    "order": {
                        "oneOf": [
                            {"type": "string"},
                            {"type": "array", "items": {"type": "string"}},
                        ]
                    },
                    "fields": {
                        "oneOf": [
                            {
                                "type": "object",
                                "properties": {
                                    "id": {"type": "boolean"},
                                    "ownerGroup": {"type": "boolean"},
                                    "accessGroups": {"type": "boolean"},
                                    "createdAt": {"type": "boolean"},
                                    "createdBy": {"type": "boolean"},
                                    "name": {"type": "boolean"},
                                    "beamlineId": {"type": "boolean"},
                                },
                                "additionalProperties": false,
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "id",
                                        "ownerGroup",
                                        "accessGroups",
                                        "createdAt",
                                        "createdBy",
                                        "name",
                                        "beamlineId",
                                    ],
                                    "example": "id",
                                },
                                "uniqueItems": true,
                            },
                        ],
                        "title": "Session.Fields",
                    },
                    "include": {
                        "title": "Session.IncludeFilter",
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {"$ref": "#/components/schemas/Session.IncludeFilter.Items"},
                                {"type": "string"},
                            ]
                        },
                    },
                },
                "additionalProperties": false,
                "x-typescript-type": "@loopback/repository#Filter<Session>",
            },
            "Session.Filter1": {
                "type": "object",
                "title": "Session.Filter",
                "properties": {
                    "offset": {"type": "integer", "minimum": 0},
                    "limit": {"type": "integer", "minimum": 1, "example": 100},
                    "skip": {"type": "integer", "minimum": 0},
                    "order": {
                        "oneOf": [
                            {"type": "string"},
                            {"type": "array", "items": {"type": "string"}},
                        ]
                    },
                    "where": {
                        "title": "Session.WhereFilter",
                        "type": "object",
                        "additionalProperties": true,
                    },
                    "fields": {
                        "oneOf": [
                            {
                                "type": "object",
                                "properties": {
                                    "id": {"type": "boolean"},
                                    "ownerGroup": {"type": "boolean"},
                                    "accessGroups": {"type": "boolean"},
                                    "createdAt": {"type": "boolean"},
                                    "createdBy": {"type": "boolean"},
                                    "name": {"type": "boolean"},
                                    "beamlineId": {"type": "boolean"},
                                },
                                "additionalProperties": false,
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "id",
                                        "ownerGroup",
                                        "accessGroups",
                                        "createdAt",
                                        "createdBy",
                                        "name",
                                        "beamlineId",
                                    ],
                                    "example": "id",
                                },
                                "uniqueItems": true,
                            },
                        ],
                        "title": "Session.Fields",
                    },
                    "include": {
                        "title": "Session.IncludeFilter",
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {"$ref": "#/components/schemas/Session.IncludeFilter.Items"},
                                {"type": "string"},
                            ]
                        },
                    },
                },
                "additionalProperties": false,
                "x-typescript-type": "@loopback/repository#Filter<Session>",
            },
        }
    },
}
