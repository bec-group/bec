{
  "openapi": "3.0.0",
  "info": {
    "title": "scibec",
    "version": "0.0.1",
    "description": "scibec",
    "contact": {
      "name": "Klaus Wakonig",
      "email": "klaus.wakonig@psi.ch"
    }
  },
  "paths": {
    "/access-accounts/count": {
      "get": {
        "x-controller-name": "AccessAccountController",
        "x-operation-name": "count",
        "tags": [
          "AccessAccountController"
        ],
        "responses": {
          "200": {
            "description": "AccessAccount model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "AccessAccount.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<AccessAccount>"
                }
              }
            }
          }
        ],
        "operationId": "AccessAccountController.count"
      }
    },
    "/access-accounts/{id}": {
      "patch": {
        "x-controller-name": "AccessAccountController",
        "x-operation-name": "updateById",
        "tags": [
          "AccessAccountController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "AccessAccount PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessAccountPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "AccessAccountController.updateById"
      },
      "get": {
        "x-controller-name": "AccessAccountController",
        "x-operation-name": "findById",
        "tags": [
          "AccessAccountController"
        ],
        "responses": {
          "200": {
            "description": "AccessAccount model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessAccountWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessAccount.Filter"
                }
              }
            }
          }
        ],
        "operationId": "AccessAccountController.findById"
      },
      "delete": {
        "x-controller-name": "AccessAccountController",
        "x-operation-name": "deleteById",
        "tags": [
          "AccessAccountController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "AccessAccount DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "AccessAccountController.deleteById"
      }
    },
    "/access-accounts": {
      "post": {
        "x-controller-name": "AccessAccountController",
        "x-operation-name": "create",
        "tags": [
          "AccessAccountController"
        ],
        "responses": {
          "200": {
            "description": "AccessAccount model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessAccount"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAccessAccount"
              }
            }
          }
        },
        "operationId": "AccessAccountController.create"
      },
      "patch": {
        "x-controller-name": "AccessAccountController",
        "x-operation-name": "updateAll",
        "tags": [
          "AccessAccountController"
        ],
        "responses": {
          "200": {
            "description": "AccessAccount PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "AccessAccount.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<AccessAccount>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessAccountPartial"
              }
            }
          }
        },
        "operationId": "AccessAccountController.updateAll"
      },
      "get": {
        "x-controller-name": "AccessAccountController",
        "x-operation-name": "find",
        "tags": [
          "AccessAccountController"
        ],
        "responses": {
          "200": {
            "description": "Array of AccessAccount model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccessAccountWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessAccount.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "AccessAccountController.find"
      }
    },
    "/access-configs/count": {
      "get": {
        "x-controller-name": "AccessConfigController",
        "x-operation-name": "count",
        "tags": [
          "AccessConfigController"
        ],
        "responses": {
          "200": {
            "description": "AccessConfig model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "AccessConfig.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<AccessConfig>"
                }
              }
            }
          }
        ],
        "operationId": "AccessConfigController.count"
      }
    },
    "/access-configs/{id}": {
      "patch": {
        "x-controller-name": "AccessConfigController",
        "x-operation-name": "updateById",
        "tags": [
          "AccessConfigController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "AccessConfig PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessConfigPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "AccessConfigController.updateById"
      },
      "get": {
        "x-controller-name": "AccessConfigController",
        "x-operation-name": "findById",
        "tags": [
          "AccessConfigController"
        ],
        "responses": {
          "200": {
            "description": "AccessConfig model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessConfigWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessConfig.Filter"
                }
              }
            }
          }
        ],
        "operationId": "AccessConfigController.findById"
      },
      "delete": {
        "x-controller-name": "AccessConfigController",
        "x-operation-name": "deleteById",
        "tags": [
          "AccessConfigController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "AccessConfig DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "AccessConfigController.deleteById"
      }
    },
    "/access-configs": {
      "post": {
        "x-controller-name": "AccessConfigController",
        "x-operation-name": "create",
        "tags": [
          "AccessConfigController"
        ],
        "responses": {
          "200": {
            "description": "AccessConfig model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessConfig"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAccessConfig"
              }
            }
          }
        },
        "operationId": "AccessConfigController.create"
      },
      "patch": {
        "x-controller-name": "AccessConfigController",
        "x-operation-name": "updateAll",
        "tags": [
          "AccessConfigController"
        ],
        "responses": {
          "200": {
            "description": "AccessConfig PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "AccessConfig.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<AccessConfig>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessConfigPartial"
              }
            }
          }
        },
        "operationId": "AccessConfigController.updateAll"
      },
      "get": {
        "x-controller-name": "AccessConfigController",
        "x-operation-name": "find",
        "tags": [
          "AccessConfigController"
        ],
        "responses": {
          "200": {
            "description": "Array of AccessConfig model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccessConfigWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessConfig.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "AccessConfigController.find"
      }
    },
    "/beamlines/count": {
      "get": {
        "x-controller-name": "BeamlineController",
        "x-operation-name": "count",
        "tags": [
          "BeamlineController"
        ],
        "responses": {
          "200": {
            "description": "Beamline model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Beamline.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Beamline>"
                }
              }
            }
          }
        ],
        "operationId": "BeamlineController.count"
      }
    },
    "/beamlines/{id}": {
      "patch": {
        "x-controller-name": "BeamlineController",
        "x-operation-name": "updateById",
        "tags": [
          "BeamlineController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Beamline PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BeamlinePartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "BeamlineController.updateById"
      },
      "get": {
        "x-controller-name": "BeamlineController",
        "x-operation-name": "findById",
        "tags": [
          "BeamlineController"
        ],
        "responses": {
          "200": {
            "description": "Beamline model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BeamlineWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Beamline.Filter"
                }
              }
            }
          }
        ],
        "operationId": "BeamlineController.findById"
      },
      "delete": {
        "x-controller-name": "BeamlineController",
        "x-operation-name": "deleteById",
        "tags": [
          "BeamlineController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Beamline DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "BeamlineController.deleteById"
      }
    },
    "/beamlines": {
      "post": {
        "x-controller-name": "BeamlineController",
        "x-operation-name": "create",
        "tags": [
          "BeamlineController"
        ],
        "responses": {
          "200": {
            "description": "Beamline model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Beamline"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewBeamline"
              }
            }
          }
        },
        "operationId": "BeamlineController.create"
      },
      "patch": {
        "x-controller-name": "BeamlineController",
        "x-operation-name": "updateAll",
        "tags": [
          "BeamlineController"
        ],
        "responses": {
          "200": {
            "description": "Beamline PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Beamline.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Beamline>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BeamlinePartial"
              }
            }
          }
        },
        "operationId": "BeamlineController.updateAll"
      },
      "get": {
        "x-controller-name": "BeamlineController",
        "x-operation-name": "find",
        "tags": [
          "BeamlineController"
        ],
        "responses": {
          "200": {
            "description": "Array of Beamline model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BeamlineWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Beamline.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "BeamlineController.find"
      }
    },
    "/datasets/count": {
      "get": {
        "x-controller-name": "DatasetController",
        "x-operation-name": "count",
        "tags": [
          "DatasetController"
        ],
        "responses": {
          "200": {
            "description": "Dataset model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Dataset.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Dataset>"
                }
              }
            }
          }
        ],
        "operationId": "DatasetController.count"
      }
    },
    "/datasets/{id}": {
      "patch": {
        "x-controller-name": "DatasetController",
        "x-operation-name": "updateById",
        "tags": [
          "DatasetController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Dataset PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatasetPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "DatasetController.updateById"
      },
      "get": {
        "x-controller-name": "DatasetController",
        "x-operation-name": "findById",
        "tags": [
          "DatasetController"
        ],
        "responses": {
          "200": {
            "description": "Dataset model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatasetWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dataset.Filter"
                }
              }
            }
          }
        ],
        "operationId": "DatasetController.findById"
      },
      "delete": {
        "x-controller-name": "DatasetController",
        "x-operation-name": "deleteById",
        "tags": [
          "DatasetController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Dataset DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "DatasetController.deleteById"
      }
    },
    "/datasets": {
      "post": {
        "x-controller-name": "DatasetController",
        "x-operation-name": "create",
        "tags": [
          "DatasetController"
        ],
        "responses": {
          "200": {
            "description": "Dataset model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dataset"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewDataset"
              }
            }
          }
        },
        "operationId": "DatasetController.create"
      },
      "patch": {
        "x-controller-name": "DatasetController",
        "x-operation-name": "updateAll",
        "tags": [
          "DatasetController"
        ],
        "responses": {
          "200": {
            "description": "Dataset PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Dataset.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Dataset>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatasetPartial"
              }
            }
          }
        },
        "operationId": "DatasetController.updateAll"
      },
      "get": {
        "x-controller-name": "DatasetController",
        "x-operation-name": "find",
        "tags": [
          "DatasetController"
        ],
        "responses": {
          "200": {
            "description": "Array of Dataset model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DatasetWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Dataset.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "DatasetController.find"
      }
    },
    "/devices/count": {
      "get": {
        "x-controller-name": "DeviceController",
        "x-operation-name": "count",
        "tags": [
          "DeviceController"
        ],
        "responses": {
          "200": {
            "description": "Device model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Device.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Device>"
                }
              }
            }
          }
        ],
        "operationId": "DeviceController.count"
      }
    },
    "/devices/{id}": {
      "patch": {
        "x-controller-name": "DeviceController",
        "x-operation-name": "updateById",
        "tags": [
          "DeviceController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Device PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DevicePartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "DeviceController.updateById"
      },
      "get": {
        "x-controller-name": "DeviceController",
        "x-operation-name": "findById",
        "tags": [
          "DeviceController"
        ],
        "responses": {
          "200": {
            "description": "Device model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Device.Filter"
                }
              }
            }
          }
        ],
        "operationId": "DeviceController.findById"
      },
      "delete": {
        "x-controller-name": "DeviceController",
        "x-operation-name": "deleteById",
        "tags": [
          "DeviceController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Device DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "DeviceController.deleteById"
      }
    },
    "/devices": {
      "post": {
        "x-controller-name": "DeviceController",
        "x-operation-name": "create",
        "tags": [
          "DeviceController"
        ],
        "responses": {
          "200": {
            "description": "Device model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Device"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewDevice"
              }
            }
          }
        },
        "operationId": "DeviceController.create"
      },
      "patch": {
        "x-controller-name": "DeviceController",
        "x-operation-name": "updateAll",
        "tags": [
          "DeviceController"
        ],
        "responses": {
          "200": {
            "description": "Device PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Device.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Device>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DevicePartial"
              }
            }
          }
        },
        "operationId": "DeviceController.updateAll"
      },
      "get": {
        "x-controller-name": "DeviceController",
        "x-operation-name": "find",
        "tags": [
          "DeviceController"
        ],
        "responses": {
          "200": {
            "description": "Array of Device model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DeviceWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Device.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "DeviceController.find"
      }
    },
    "/events/count": {
      "get": {
        "x-controller-name": "EventController",
        "x-operation-name": "count",
        "tags": [
          "EventController"
        ],
        "responses": {
          "200": {
            "description": "Event model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Event.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Event>"
                }
              }
            }
          }
        ],
        "operationId": "EventController.count"
      }
    },
    "/events/{id}": {
      "put": {
        "x-controller-name": "EventController",
        "x-operation-name": "replaceById",
        "tags": [
          "EventController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Event PUT success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Event"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "EventController.replaceById"
      },
      "patch": {
        "x-controller-name": "EventController",
        "x-operation-name": "updateById",
        "tags": [
          "EventController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Event PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "EventController.updateById"
      },
      "get": {
        "x-controller-name": "EventController",
        "x-operation-name": "findById",
        "tags": [
          "EventController"
        ],
        "responses": {
          "200": {
            "description": "Event model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event.Filter"
                }
              }
            }
          }
        ],
        "operationId": "EventController.findById"
      },
      "delete": {
        "x-controller-name": "EventController",
        "x-operation-name": "deleteById",
        "tags": [
          "EventController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Event DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "EventController.deleteById"
      }
    },
    "/events": {
      "post": {
        "x-controller-name": "EventController",
        "x-operation-name": "create",
        "tags": [
          "EventController"
        ],
        "responses": {
          "200": {
            "description": "Event model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewEvent"
              }
            }
          }
        },
        "operationId": "EventController.create"
      },
      "patch": {
        "x-controller-name": "EventController",
        "x-operation-name": "updateAll",
        "tags": [
          "EventController"
        ],
        "responses": {
          "200": {
            "description": "Event PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Event.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Event>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventPartial"
              }
            }
          }
        },
        "operationId": "EventController.updateAll"
      },
      "get": {
        "x-controller-name": "EventController",
        "x-operation-name": "find",
        "tags": [
          "EventController"
        ],
        "responses": {
          "200": {
            "description": "Array of Event model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EventWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "EventController.find"
      }
    },
    "/experiment-accounts/count": {
      "get": {
        "x-controller-name": "ExperimentAccountController",
        "x-operation-name": "count",
        "tags": [
          "ExperimentAccountController"
        ],
        "responses": {
          "200": {
            "description": "ExperimentAccount model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ExperimentAccount.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<ExperimentAccount>"
                }
              }
            }
          }
        ],
        "operationId": "ExperimentAccountController.count"
      }
    },
    "/experiment-accounts/{id}": {
      "patch": {
        "x-controller-name": "ExperimentAccountController",
        "x-operation-name": "updateById",
        "tags": [
          "ExperimentAccountController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "ExperimentAccount PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessAccountPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "ExperimentAccountController.updateById"
      },
      "get": {
        "x-controller-name": "ExperimentAccountController",
        "x-operation-name": "findById",
        "tags": [
          "ExperimentAccountController"
        ],
        "responses": {
          "200": {
            "description": "ExperimentAccount model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessAccountWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExperimentAccount.Filter"
                }
              }
            }
          }
        ],
        "operationId": "ExperimentAccountController.findById"
      },
      "delete": {
        "x-controller-name": "ExperimentAccountController",
        "x-operation-name": "deleteById",
        "tags": [
          "ExperimentAccountController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "ExperimentAccount DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "ExperimentAccountController.deleteById"
      }
    },
    "/experiment-accounts": {
      "post": {
        "x-controller-name": "ExperimentAccountController",
        "x-operation-name": "create",
        "tags": [
          "ExperimentAccountController"
        ],
        "responses": {
          "200": {
            "description": "ExperimentAccount model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessAccount"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewExperimentAccount"
              }
            }
          }
        },
        "operationId": "ExperimentAccountController.create"
      },
      "patch": {
        "x-controller-name": "ExperimentAccountController",
        "x-operation-name": "updateAll",
        "tags": [
          "ExperimentAccountController"
        ],
        "responses": {
          "200": {
            "description": "ExperimentAccount PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "ExperimentAccount.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<ExperimentAccount>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessAccountPartial"
              }
            }
          }
        },
        "operationId": "ExperimentAccountController.updateAll"
      },
      "get": {
        "x-controller-name": "ExperimentAccountController",
        "x-operation-name": "find",
        "tags": [
          "ExperimentAccountController"
        ],
        "responses": {
          "200": {
            "description": "Array of ExperimentAccount model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccessAccountWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExperimentAccount.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "ExperimentAccountController.find"
      }
    },
    "/experiments/count": {
      "get": {
        "x-controller-name": "ExperimentController",
        "x-operation-name": "count",
        "tags": [
          "ExperimentController"
        ],
        "responses": {
          "200": {
            "description": "Experiment model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Experiment.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Experiment>"
                }
              }
            }
          }
        ],
        "operationId": "ExperimentController.count"
      }
    },
    "/experiments/{id}": {
      "patch": {
        "x-controller-name": "ExperimentController",
        "x-operation-name": "updateById",
        "tags": [
          "ExperimentController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Experiment PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExperimentPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "ExperimentController.updateById"
      },
      "get": {
        "x-controller-name": "ExperimentController",
        "x-operation-name": "findById",
        "tags": [
          "ExperimentController"
        ],
        "responses": {
          "200": {
            "description": "Experiment model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExperimentWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Experiment.Filter"
                }
              }
            }
          }
        ],
        "operationId": "ExperimentController.findById"
      },
      "delete": {
        "x-controller-name": "ExperimentController",
        "x-operation-name": "deleteById",
        "tags": [
          "ExperimentController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Experiment DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "ExperimentController.deleteById"
      }
    },
    "/experiments": {
      "post": {
        "x-controller-name": "ExperimentController",
        "x-operation-name": "create",
        "tags": [
          "ExperimentController"
        ],
        "responses": {
          "200": {
            "description": "Experiment model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Experiment"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewExperiment"
              }
            }
          }
        },
        "operationId": "ExperimentController.create"
      },
      "patch": {
        "x-controller-name": "ExperimentController",
        "x-operation-name": "updateAll",
        "tags": [
          "ExperimentController"
        ],
        "responses": {
          "200": {
            "description": "Experiment PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Experiment.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Experiment>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExperimentPartial"
              }
            }
          }
        },
        "operationId": "ExperimentController.updateAll"
      },
      "get": {
        "x-controller-name": "ExperimentController",
        "x-operation-name": "find",
        "tags": [
          "ExperimentController"
        ],
        "responses": {
          "200": {
            "description": "Array of Experiment model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExperimentWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Experiment.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "ExperimentController.find"
      }
    },
    "/functional-accounts/count": {
      "get": {
        "x-controller-name": "FunctionalAccountController",
        "x-operation-name": "count",
        "tags": [
          "FunctionalAccountController"
        ],
        "responses": {
          "200": {
            "description": "FunctionalAccount model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "FunctionalAccount.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<FunctionalAccount>"
                }
              }
            }
          }
        ],
        "operationId": "FunctionalAccountController.count"
      }
    },
    "/functional-accounts/{id}": {
      "patch": {
        "x-controller-name": "FunctionalAccountController",
        "x-operation-name": "updateById",
        "tags": [
          "FunctionalAccountController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "FunctionalAccount PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessAccountPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "FunctionalAccountController.updateById"
      },
      "get": {
        "x-controller-name": "FunctionalAccountController",
        "x-operation-name": "findById",
        "tags": [
          "FunctionalAccountController"
        ],
        "responses": {
          "200": {
            "description": "FunctionalAccount model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessAccountWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FunctionalAccount.Filter"
                }
              }
            }
          }
        ],
        "operationId": "FunctionalAccountController.findById"
      },
      "delete": {
        "x-controller-name": "FunctionalAccountController",
        "x-operation-name": "deleteById",
        "tags": [
          "FunctionalAccountController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "FunctionalAccount DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "FunctionalAccountController.deleteById"
      }
    },
    "/functional-accounts": {
      "post": {
        "x-controller-name": "FunctionalAccountController",
        "x-operation-name": "create",
        "tags": [
          "FunctionalAccountController"
        ],
        "responses": {
          "200": {
            "description": "FunctionalAccount model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessAccount"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewFunctionalAccount"
              }
            }
          }
        },
        "operationId": "FunctionalAccountController.create"
      },
      "patch": {
        "x-controller-name": "FunctionalAccountController",
        "x-operation-name": "updateAll",
        "tags": [
          "FunctionalAccountController"
        ],
        "responses": {
          "200": {
            "description": "FunctionalAccount PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "FunctionalAccount.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<FunctionalAccount>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessAccountPartial"
              }
            }
          }
        },
        "operationId": "FunctionalAccountController.updateAll"
      },
      "get": {
        "x-controller-name": "FunctionalAccountController",
        "x-operation-name": "find",
        "tags": [
          "FunctionalAccountController"
        ],
        "responses": {
          "200": {
            "description": "Array of FunctionalAccount model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccessAccountWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FunctionalAccount.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "FunctionalAccountController.find"
      }
    },
    "/scans/count": {
      "get": {
        "x-controller-name": "ScanController",
        "x-operation-name": "count",
        "tags": [
          "ScanController"
        ],
        "responses": {
          "200": {
            "description": "Scan model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Scan.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Scan>"
                }
              }
            }
          }
        ],
        "operationId": "ScanController.count"
      }
    },
    "/scans/{id}": {
      "patch": {
        "x-controller-name": "ScanController",
        "x-operation-name": "updateById",
        "tags": [
          "ScanController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Scan PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScanPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "ScanController.updateById"
      },
      "get": {
        "x-controller-name": "ScanController",
        "x-operation-name": "findById",
        "tags": [
          "ScanController"
        ],
        "responses": {
          "200": {
            "description": "Scan model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScanWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Scan.Filter"
                }
              }
            }
          }
        ],
        "operationId": "ScanController.findById"
      },
      "delete": {
        "x-controller-name": "ScanController",
        "x-operation-name": "deleteById",
        "tags": [
          "ScanController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Scan DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "ScanController.deleteById"
      }
    },
    "/scans": {
      "post": {
        "x-controller-name": "ScanController",
        "x-operation-name": "create",
        "tags": [
          "ScanController"
        ],
        "responses": {
          "200": {
            "description": "Scan model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Scan"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewScan"
              }
            }
          }
        },
        "operationId": "ScanController.create"
      },
      "patch": {
        "x-controller-name": "ScanController",
        "x-operation-name": "updateAll",
        "tags": [
          "ScanController"
        ],
        "responses": {
          "200": {
            "description": "Scan PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Scan.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Scan>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScanPartial"
              }
            }
          }
        },
        "operationId": "ScanController.updateAll"
      },
      "get": {
        "x-controller-name": "ScanController",
        "x-operation-name": "find",
        "tags": [
          "ScanController"
        ],
        "responses": {
          "200": {
            "description": "Array of Scan model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScanWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Scan.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "ScanController.find"
      }
    },
    "/sessions/count": {
      "get": {
        "x-controller-name": "SessionController",
        "x-operation-name": "count",
        "tags": [
          "SessionController"
        ],
        "responses": {
          "200": {
            "description": "Session model count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Session.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Session>"
                }
              }
            }
          }
        ],
        "operationId": "SessionController.count"
      }
    },
    "/sessions/{id}": {
      "patch": {
        "x-controller-name": "SessionController",
        "x-operation-name": "updateById",
        "tags": [
          "SessionController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Session PATCH success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionPartial"
              }
            }
          },
          "x-parameter-index": 1
        },
        "operationId": "SessionController.updateById"
      },
      "get": {
        "x-controller-name": "SessionController",
        "x-operation-name": "findById",
        "tags": [
          "SessionController"
        ],
        "responses": {
          "200": {
            "description": "Session model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionWithRelations"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session.Filter"
                }
              }
            }
          }
        ],
        "operationId": "SessionController.findById"
      },
      "delete": {
        "x-controller-name": "SessionController",
        "x-operation-name": "deleteById",
        "tags": [
          "SessionController"
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Session DELETE success"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "operationId": "SessionController.deleteById"
      }
    },
    "/sessions": {
      "post": {
        "x-controller-name": "SessionController",
        "x-operation-name": "create",
        "tags": [
          "SessionController"
        ],
        "responses": {
          "200": {
            "description": "Session model instance",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewSession"
              }
            }
          }
        },
        "operationId": "SessionController.create"
      },
      "patch": {
        "x-controller-name": "SessionController",
        "x-operation-name": "updateAll",
        "tags": [
          "SessionController"
        ],
        "responses": {
          "200": {
            "description": "Session PATCH success count",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/loopback.Count"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "where",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Session.WhereFilter",
                  "additionalProperties": true,
                  "x-typescript-type": "@loopback/repository#Where<Session>"
                }
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionPartial"
              }
            }
          }
        },
        "operationId": "SessionController.updateAll"
      },
      "get": {
        "x-controller-name": "SessionController",
        "x-operation-name": "find",
        "tags": [
          "SessionController"
        ],
        "responses": {
          "200": {
            "description": "Array of Session model instances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionWithRelations"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session.Filter1"
                }
              }
            }
          }
        ],
        "operationId": "SessionController.find"
      }
    }
  },
  "servers": [
    {
      "url": "http://docker:3030"
    }
  ],
  "components": {
    "schemas": {
      "AccessAccount": {
        "title": "AccessAccount",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can create subentries"
            }
          },
          "readACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can read this entry"
            }
          },
          "updateACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can update this entry"
            }
          },
          "deleteACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can delete this entry"
            }
          },
          "shareACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can add users/groups to createACL, readACL and updateACL"
            }
          },
          "adminACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can administrate this entry"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "read": {
            "type": "boolean"
          },
          "write": {
            "type": "boolean"
          },
          "remote": {
            "type": "boolean"
          },
          "token": {
            "type": "string"
          },
          "isFunctional": {
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "read",
          "write",
          "remote",
          "token"
        ],
        "additionalProperties": false
      },
      "NewAccessAccount": {
        "title": "NewAccessAccount",
        "type": "object",
        "description": "(tsType: Omit<AccessAccount, 'id'>, schemaOptions: { title: 'NewAccessAccount', exclude: [ 'id' ] })",
        "properties": {
          "createACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can create subentries"
            }
          },
          "readACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can read this entry"
            }
          },
          "updateACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can update this entry"
            }
          },
          "deleteACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can delete this entry"
            }
          },
          "shareACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can add users/groups to createACL, readACL and updateACL"
            }
          },
          "adminACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can administrate this entry"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "read": {
            "type": "boolean"
          },
          "write": {
            "type": "boolean"
          },
          "remote": {
            "type": "boolean"
          },
          "token": {
            "type": "string"
          },
          "isFunctional": {
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "read",
          "write",
          "remote",
          "token"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<AccessAccount, 'id'>"
      },
      "AccessAccountWithRelations": {
        "title": "AccessAccountWithRelations",
        "type": "object",
        "description": "(tsType: AccessAccountWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "createACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can create subentries"
            }
          },
          "readACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can read this entry"
            }
          },
          "updateACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can update this entry"
            }
          },
          "deleteACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can delete this entry"
            }
          },
          "shareACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can add users/groups to createACL, readACL and updateACL"
            }
          },
          "adminACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can administrate this entry"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "read": {
            "type": "boolean"
          },
          "write": {
            "type": "boolean"
          },
          "remote": {
            "type": "boolean"
          },
          "token": {
            "type": "string"
          },
          "isFunctional": {
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "read",
          "write",
          "remote",
          "token"
        ],
        "additionalProperties": false,
        "x-typescript-type": "AccessAccountWithRelations"
      },
      "AccessAccountPartial": {
        "title": "AccessAccountPartial",
        "type": "object",
        "description": "(tsType: Partial<AccessAccount>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "createACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can create subentries"
            }
          },
          "readACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can read this entry"
            }
          },
          "updateACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can update this entry"
            }
          },
          "deleteACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can delete this entry"
            }
          },
          "shareACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can add users/groups to createACL, readACL and updateACL"
            }
          },
          "adminACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can administrate this entry"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "read": {
            "type": "boolean"
          },
          "write": {
            "type": "boolean"
          },
          "remote": {
            "type": "boolean"
          },
          "token": {
            "type": "string"
          },
          "isFunctional": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<AccessAccount>"
      },
      "AccessConfig": {
        "title": "AccessConfig",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can create subentries"
            }
          },
          "readACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can read this entry"
            }
          },
          "updateACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can update this entry"
            }
          },
          "deleteACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can delete this entry"
            }
          },
          "shareACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can add users/groups to createACL, readACL and updateACL"
            }
          },
          "adminACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can administrate this entry"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "targetAccount": {
            "type": "string"
          },
          "beamlineId": {
            "type": "string",
            "description": "Beamline to which this config belongs."
          },
          "authEnabled": {
            "type": "boolean"
          },
          "activeAccounts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "usePasswords": {
            "type": "boolean"
          }
        },
        "required": [
          "beamlineId",
          "authEnabled",
          "usePasswords"
        ],
        "additionalProperties": false
      },
      "NewAccessConfig": {
        "title": "NewAccessConfig",
        "type": "object",
        "description": "(tsType: Omit<AccessConfig, 'id'>, schemaOptions: { title: 'NewAccessConfig', exclude: [ 'id' ] })",
        "properties": {
          "createACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can create subentries"
            }
          },
          "readACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can read this entry"
            }
          },
          "updateACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can update this entry"
            }
          },
          "deleteACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can delete this entry"
            }
          },
          "shareACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can add users/groups to createACL, readACL and updateACL"
            }
          },
          "adminACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can administrate this entry"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "targetAccount": {
            "type": "string"
          },
          "beamlineId": {
            "type": "string",
            "description": "Beamline to which this config belongs."
          },
          "authEnabled": {
            "type": "boolean"
          },
          "activeAccounts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "usePasswords": {
            "type": "boolean"
          }
        },
        "required": [
          "beamlineId",
          "authEnabled",
          "usePasswords"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<AccessConfig, 'id'>"
      },
      "DeviceWithRelations": {
        "title": "DeviceWithRelations",
        "type": "object",
        "description": "(tsType: DeviceWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "createACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can create subentries"
            }
          },
          "readACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can read this entry"
            }
          },
          "updateACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can update this entry"
            }
          },
          "deleteACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can delete this entry"
            }
          },
          "shareACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can add users/groups to createACL, readACL and updateACL"
            }
          },
          "adminACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can administrate this entry"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "parentId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string",
            "description": "Session to which this device belongs."
          },
          "enabled": {
            "type": "boolean",
            "description": "True if the device should be enabled."
          },
          "enabled_set": {
            "type": "boolean",
            "description": "True if the device is settable."
          },
          "deviceClass": {
            "type": "string",
            "description": "Ophyd device class"
          },
          "deviceTags": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "User-defined tags for easier access and grouping."
            }
          },
          "deviceConfig": {
            "type": "object",
            "description": "Device config, including the ophyd init arguments. Must at least contain name and label."
          },
          "acquisitionConfig": {
            "type": "object",
            "description": "Config to determine the behaviour during data acquisition. Must include the fields schedule, readoutPriority and acquisitionGroup.",
            "properties": {
              "schedule": {
                "description": "Acquisition scheduling.",
                "type": "string",
                "enum": [
                  "sync",
                  "async",
                  "flyer"
                ]
              },
              "acquisitionGroup": {
                "description": "Type of device.",
                "type": "string",
                "enum": [
                  "motor",
                  "monitor",
                  "status",
                  "detector"
                ]
              },
              "readoutPriority": {
                "description": "Readout priority of the device during a scan.",
                "type": "string",
                "enum": [
                  "monitored",
                  "baseline",
                  "ignored"
                ]
              }
            },
            "required": [
              "schedule",
              "acquisitionGroup",
              "readoutPriority"
            ]
          },
          "onFailure": {
            "type": "string",
            "description": "Defines how device failures are handled. \"raise\" raises an error immediately. \"buffer\" will try fall back to old values, should this not be possible, an error will be raised. \"retry\" will retry once before raising an error.",
            "enum": [
              "raise",
              "retry",
              "buffer"
            ]
          },
          "userParameter": {
            "type": "object",
            "description": "Additional fields for user settings such as in and out positions."
          },
          "subdevices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceWithRelations"
            }
          },
          "parent": {
            "$ref": "#/components/schemas/DeviceWithRelations"
          },
          "session": {
            "$ref": "#/components/schemas/SessionWithRelations"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventWithRelations"
            }
          }
        },
        "required": [
          "name",
          "enabled",
          "deviceClass",
          "deviceConfig",
          "acquisitionConfig"
        ],
        "additionalProperties": false,
        "x-typescript-type": "DeviceWithRelations"
      },
      "DatasetWithRelations": {
        "title": "DatasetWithRelations",
        "type": "object",
        "description": "(tsType: DatasetWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "createACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can create subentries"
            }
          },
          "readACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can read this entry"
            }
          },
          "updateACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can update this entry"
            }
          },
          "deleteACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can delete this entry"
            }
          },
          "shareACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can add users/groups to createACL, readACL and updateACL"
            }
          },
          "adminACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can administrate this entry"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "number": {
            "type": "number"
          },
          "experimentId": {
            "type": "string"
          },
          "scans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScanWithRelations"
            }
          },
          "experiment": {
            "$ref": "#/components/schemas/ExperimentWithRelations"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "DatasetWithRelations"
      },
      "EventWithRelations": {
        "title": "EventWithRelations",
        "type": "object",
        "description": "(tsType: EventWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "createACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can create subentries"
            }
          },
          "readACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can read this entry"
            }
          },
          "updateACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can update this entry"
            }
          },
          "deleteACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can delete this entry"
            }
          },
          "shareACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can add users/groups to createACL, readACL and updateACL"
            }
          },
          "adminACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can administrate this entry"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "data": {
            "type": "object"
          },
          "deviceId": {
            "type": "string",
            "description": "The events device"
          },
          "scanId": {
            "type": "string",
            "description": "The parent scan"
          },
          "device": {
            "$ref": "#/components/schemas/DeviceWithRelations"
          },
          "scan": {
            "$ref": "#/components/schemas/ScanWithRelations"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "EventWithRelations"
      },
      "ScanWithRelations": {
        "title": "ScanWithRelations",
        "type": "object",
        "description": "(tsType: ScanWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "createACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can create subentries"
            }
          },
          "readACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can read this entry"
            }
          },
          "updateACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can update this entry"
            }
          },
          "deleteACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can delete this entry"
            }
          },
          "shareACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can add users/groups to createACL, readACL and updateACL"
            }
          },
          "adminACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can administrate this entry"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "scanType": {
            "type": "string"
          },
          "scanParameter": {
            "type": "object"
          },
          "userParameter": {
            "type": "object"
          },
          "queue": {
            "type": "string"
          },
          "scanId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "queueId": {
            "type": "string"
          },
          "exitStatus": {
            "type": "string"
          },
          "scanNumber": {
            "type": "number"
          },
          "metadata": {
            "type": "object"
          },
          "files": {
            "type": "object"
          },
          "sessionId": {
            "type": "string"
          },
          "datasetId": {
            "type": "string"
          },
          "session": {
            "$ref": "#/components/schemas/SessionWithRelations"
          },
          "dataset": {
            "$ref": "#/components/schemas/DatasetWithRelations"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventWithRelations"
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "ScanWithRelations"
      },
      "SessionWithRelations": {
        "title": "SessionWithRelations",
        "type": "object",
        "description": "(tsType: SessionWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "createACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can create subentries"
            }
          },
          "readACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can read this entry"
            }
          },
          "updateACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can update this entry"
            }
          },
          "deleteACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can delete this entry"
            }
          },
          "shareACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can add users/groups to createACL, readACL and updateACL"
            }
          },
          "adminACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can administrate this entry"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "experimentId": {
            "type": "string",
            "description": "Session to which this device belongs."
          },
          "sessionConfig": {
            "type": "object"
          },
          "experiment": {
            "$ref": "#/components/schemas/ExperimentWithRelations"
          },
          "scans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScanWithRelations"
            }
          },
          "devices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeviceWithRelations"
            }
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false,
        "x-typescript-type": "SessionWithRelations"
      },
      "ExperimentWithRelations": {
        "title": "ExperimentWithRelations",
        "type": "object",
        "description": "(tsType: ExperimentWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "createACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can create subentries"
            }
          },
          "readACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can read this entry"
            }
          },
          "updateACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can update this entry"
            }
          },
          "deleteACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can delete this entry"
            }
          },
          "shareACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can add users/groups to createACL, readACL and updateACL"
            }
          },
          "adminACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can administrate this entry"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "datasets": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "beamlineId": {
            "type": "string"
          },
          "writeAccount": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "logbook": {
            "type": "string"
          },
          "samples": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "experimentConfig": {
            "type": "object"
          },
          "experimentInfo": {
            "type": "object"
          },
          "activeSession": {
            "type": "string"
          },
          "experimentAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessAccountWithRelations"
            }
          },
          "sessions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SessionWithRelations"
            }
          }
        },
        "required": [
          "name",
          "beamlineId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "ExperimentWithRelations"
      },
      "BeamlineWithRelations": {
        "title": "BeamlineWithRelations",
        "type": "object",
        "description": "(tsType: BeamlineWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "createACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can create subentries"
            }
          },
          "readACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can read this entry"
            }
          },
          "updateACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can update this entry"
            }
          },
          "deleteACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can delete this entry"
            }
          },
          "shareACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can add users/groups to createACL, readACL and updateACL"
            }
          },
          "adminACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can administrate this entry"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "activeExperiment": {
            "type": "string"
          },
          "accessConfig": {
            "$ref": "#/components/schemas/AccessConfigWithRelations"
          },
          "experiments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExperimentWithRelations"
            }
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false,
        "x-typescript-type": "BeamlineWithRelations"
      },
      "AccessConfigWithRelations": {
        "title": "AccessConfigWithRelations",
        "type": "object",
        "description": "(tsType: AccessConfigWithRelations, schemaOptions: { includeRelations: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "createACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can create subentries"
            }
          },
          "readACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can read this entry"
            }
          },
          "updateACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can update this entry"
            }
          },
          "deleteACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can delete this entry"
            }
          },
          "shareACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can add users/groups to createACL, readACL and updateACL"
            }
          },
          "adminACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can administrate this entry"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "targetAccount": {
            "type": "string"
          },
          "beamlineId": {
            "type": "string",
            "description": "Beamline to which this config belongs."
          },
          "authEnabled": {
            "type": "boolean"
          },
          "activeAccounts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "usePasswords": {
            "type": "boolean"
          },
          "beamline": {
            "$ref": "#/components/schemas/BeamlineWithRelations"
          },
          "functionalAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccessAccountWithRelations"
            }
          }
        },
        "required": [
          "beamlineId",
          "authEnabled",
          "usePasswords"
        ],
        "additionalProperties": false,
        "x-typescript-type": "AccessConfigWithRelations"
      },
      "AccessConfigPartial": {
        "title": "AccessConfigPartial",
        "type": "object",
        "description": "(tsType: Partial<AccessConfig>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "createACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can create subentries"
            }
          },
          "readACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can read this entry"
            }
          },
          "updateACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can update this entry"
            }
          },
          "deleteACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can delete this entry"
            }
          },
          "shareACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can add users/groups to createACL, readACL and updateACL"
            }
          },
          "adminACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can administrate this entry"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "targetAccount": {
            "type": "string"
          },
          "beamlineId": {
            "type": "string",
            "description": "Beamline to which this config belongs."
          },
          "authEnabled": {
            "type": "boolean"
          },
          "activeAccounts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "usePasswords": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<AccessConfig>"
      },
      "Beamline": {
        "title": "Beamline",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can create subentries"
            }
          },
          "readACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can read this entry"
            }
          },
          "updateACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can update this entry"
            }
          },
          "deleteACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can delete this entry"
            }
          },
          "shareACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can add users/groups to createACL, readACL and updateACL"
            }
          },
          "adminACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can administrate this entry"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "activeExperiment": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false
      },
      "NewBeamline": {
        "title": "NewBeamline",
        "type": "object",
        "description": "(tsType: Omit<Beamline, 'id'>, schemaOptions: { title: 'NewBeamline', exclude: [ 'id' ] })",
        "properties": {
          "createACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can create subentries"
            }
          },
          "readACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can read this entry"
            }
          },
          "updateACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can update this entry"
            }
          },
          "deleteACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can delete this entry"
            }
          },
          "shareACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can add users/groups to createACL, readACL and updateACL"
            }
          },
          "adminACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can administrate this entry"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "activeExperiment": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Beamline, 'id'>"
      },
      "BeamlinePartial": {
        "title": "BeamlinePartial",
        "type": "object",
        "description": "(tsType: Partial<Beamline>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "createACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can create subentries"
            }
          },
          "readACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can read this entry"
            }
          },
          "updateACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can update this entry"
            }
          },
          "deleteACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can delete this entry"
            }
          },
          "shareACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can add users/groups to createACL, readACL and updateACL"
            }
          },
          "adminACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can administrate this entry"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "activeExperiment": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Beamline>"
      },
      "Dataset": {
        "title": "Dataset",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can create subentries"
            }
          },
          "readACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can read this entry"
            }
          },
          "updateACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can update this entry"
            }
          },
          "deleteACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can delete this entry"
            }
          },
          "shareACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can add users/groups to createACL, readACL and updateACL"
            }
          },
          "adminACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can administrate this entry"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "number": {
            "type": "number"
          },
          "experimentId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "NewDataset": {
        "title": "NewDataset",
        "type": "object",
        "description": "(tsType: Omit<Dataset, 'id'>, schemaOptions: { title: 'NewDataset', exclude: [ 'id' ] })",
        "properties": {
          "createACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can create subentries"
            }
          },
          "readACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can read this entry"
            }
          },
          "updateACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can update this entry"
            }
          },
          "deleteACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can delete this entry"
            }
          },
          "shareACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can add users/groups to createACL, readACL and updateACL"
            }
          },
          "adminACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can administrate this entry"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "number": {
            "type": "number"
          },
          "experimentId": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<Dataset, 'id'>"
      },
      "DatasetPartial": {
        "title": "DatasetPartial",
        "type": "object",
        "description": "(tsType: Partial<Dataset>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "createACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can create subentries"
            }
          },
          "readACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can read this entry"
            }
          },
          "updateACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can update this entry"
            }
          },
          "deleteACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can delete this entry"
            }
          },
          "shareACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can add users/groups to createACL, readACL and updateACL"
            }
          },
          "adminACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can administrate this entry"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "number": {
            "type": "number"
          },
          "experimentId": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Dataset>"
      },
      "Device": {
        "title": "Device",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can create subentries"
            }
          },
          "readACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can read this entry"
            }
          },
          "updateACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can update this entry"
            }
          },
          "deleteACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can delete this entry"
            }
          },
          "shareACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can add users/groups to createACL, readACL and updateACL"
            }
          },
          "adminACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can administrate this entry"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "parentId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string",
            "description": "Session to which this device belongs."
          },
          "enabled": {
            "type": "boolean",
            "description": "True if the device should be enabled."
          },
          "enabled_set": {
            "type": "boolean",
            "description": "True if the device is settable."
          },
          "deviceClass": {
            "type": "string",
            "description": "Ophyd device class"
          },
          "deviceTags": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "User-defined tags for easier access and grouping."
            }
          },
          "deviceConfig": {
            "type": "object",
            "description": "Device config, including the ophyd init arguments. Must at least contain name and label."
          },
          "acquisitionConfig": {
            "type": "object",
            "description": "Config to determine the behaviour during data acquisition. Must include the fields schedule, readoutPriority and acquisitionGroup.",
            "properties": {
              "schedule": {
                "description": "Acquisition scheduling.",
                "type": "string",
                "enum": [
                  "sync",
                  "async",
                  "flyer"
                ]
              },
              "acquisitionGroup": {
                "description": "Type of device.",
                "type": "string",
                "enum": [
                  "motor",
                  "monitor",
                  "status",
                  "detector"
                ]
              },
              "readoutPriority": {
                "description": "Readout priority of the device during a scan.",
                "type": "string",
                "enum": [
                  "monitored",
                  "baseline",
                  "ignored"
                ]
              }
            },
            "required": [
              "schedule",
              "acquisitionGroup",
              "readoutPriority"
            ]
          },
          "onFailure": {
            "type": "string",
            "description": "Defines how device failures are handled. \"raise\" raises an error immediately. \"buffer\" will try fall back to old values, should this not be possible, an error will be raised. \"retry\" will retry once before raising an error.",
            "enum": [
              "raise",
              "retry",
              "buffer"
            ]
          },
          "userParameter": {
            "type": "object",
            "description": "Additional fields for user settings such as in and out positions."
          }
        },
        "required": [
          "name",
          "enabled",
          "deviceClass",
          "deviceConfig",
          "acquisitionConfig"
        ],
        "additionalProperties": false
      },
      "NewDevice": {
        "title": "NewDevice",
        "type": "object",
        "description": "(tsType: Omit<Device, 'id'>, schemaOptions: { title: 'NewDevice', exclude: [ 'id' ] })",
        "properties": {
          "createACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can create subentries"
            }
          },
          "readACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can read this entry"
            }
          },
          "updateACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can update this entry"
            }
          },
          "deleteACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can delete this entry"
            }
          },
          "shareACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can add users/groups to createACL, readACL and updateACL"
            }
          },
          "adminACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can administrate this entry"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "parentId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string",
            "description": "Session to which this device belongs."
          },
          "enabled": {
            "type": "boolean",
            "description": "True if the device should be enabled."
          },
          "enabled_set": {
            "type": "boolean",
            "description": "True if the device is settable."
          },
          "deviceClass": {
            "type": "string",
            "description": "Ophyd device class"
          },
          "deviceTags": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "User-defined tags for easier access and grouping."
            }
          },
          "deviceConfig": {
            "type": "object",
            "description": "Device config, including the ophyd init arguments. Must at least contain name and label."
          },
          "acquisitionConfig": {
            "type": "object",
            "description": "Config to determine the behaviour during data acquisition. Must include the fields schedule, readoutPriority and acquisitionGroup.",
            "properties": {
              "schedule": {
                "description": "Acquisition scheduling.",
                "type": "string",
                "enum": [
                  "sync",
                  "async",
                  "flyer"
                ]
              },
              "acquisitionGroup": {
                "description": "Type of device.",
                "type": "string",
                "enum": [
                  "motor",
                  "monitor",
                  "status",
                  "detector"
                ]
              },
              "readoutPriority": {
                "description": "Readout priority of the device during a scan.",
                "type": "string",
                "enum": [
                  "monitored",
                  "baseline",
                  "ignored"
                ]
              }
            },
            "required": [
              "schedule",
              "acquisitionGroup",
              "readoutPriority"
            ]
          },
          "onFailure": {
            "type": "string",
            "description": "Defines how device failures are handled. \"raise\" raises an error immediately. \"buffer\" will try fall back to old values, should this not be possible, an error will be raised. \"retry\" will retry once before raising an error.",
            "enum": [
              "raise",
              "retry",
              "buffer"
            ]
          },
          "userParameter": {
            "type": "object",
            "description": "Additional fields for user settings such as in and out positions."
          }
        },
        "required": [
          "name",
          "enabled",
          "deviceClass",
          "deviceConfig",
          "acquisitionConfig"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Device, 'id'>"
      },
      "DevicePartial": {
        "title": "DevicePartial",
        "type": "object",
        "description": "(tsType: Partial<Device>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "createACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can create subentries"
            }
          },
          "readACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can read this entry"
            }
          },
          "updateACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can update this entry"
            }
          },
          "deleteACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can delete this entry"
            }
          },
          "shareACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can add users/groups to createACL, readACL and updateACL"
            }
          },
          "adminACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can administrate this entry"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "parentId": {
            "type": "string"
          },
          "sessionId": {
            "type": "string",
            "description": "Session to which this device belongs."
          },
          "enabled": {
            "type": "boolean",
            "description": "True if the device should be enabled."
          },
          "enabled_set": {
            "type": "boolean",
            "description": "True if the device is settable."
          },
          "deviceClass": {
            "type": "string",
            "description": "Ophyd device class"
          },
          "deviceTags": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "User-defined tags for easier access and grouping."
            }
          },
          "deviceConfig": {
            "type": "object",
            "description": "Device config, including the ophyd init arguments. Must at least contain name and label."
          },
          "acquisitionConfig": {
            "type": "object",
            "description": "Config to determine the behaviour during data acquisition. Must include the fields schedule, readoutPriority and acquisitionGroup.",
            "properties": {
              "schedule": {
                "description": "Acquisition scheduling.",
                "type": "string",
                "enum": [
                  "sync",
                  "async",
                  "flyer"
                ]
              },
              "acquisitionGroup": {
                "description": "Type of device.",
                "type": "string",
                "enum": [
                  "motor",
                  "monitor",
                  "status",
                  "detector"
                ]
              },
              "readoutPriority": {
                "description": "Readout priority of the device during a scan.",
                "type": "string",
                "enum": [
                  "monitored",
                  "baseline",
                  "ignored"
                ]
              }
            },
            "required": [
              "schedule",
              "acquisitionGroup",
              "readoutPriority"
            ]
          },
          "onFailure": {
            "type": "string",
            "description": "Defines how device failures are handled. \"raise\" raises an error immediately. \"buffer\" will try fall back to old values, should this not be possible, an error will be raised. \"retry\" will retry once before raising an error.",
            "enum": [
              "raise",
              "retry",
              "buffer"
            ]
          },
          "userParameter": {
            "type": "object",
            "description": "Additional fields for user settings such as in and out positions."
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Device>"
      },
      "Event": {
        "title": "Event",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can create subentries"
            }
          },
          "readACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can read this entry"
            }
          },
          "updateACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can update this entry"
            }
          },
          "deleteACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can delete this entry"
            }
          },
          "shareACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can add users/groups to createACL, readACL and updateACL"
            }
          },
          "adminACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can administrate this entry"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "data": {
            "type": "object"
          },
          "deviceId": {
            "type": "string",
            "description": "The events device"
          },
          "scanId": {
            "type": "string",
            "description": "The parent scan"
          }
        },
        "additionalProperties": false
      },
      "NewEvent": {
        "title": "NewEvent",
        "type": "object",
        "description": "(tsType: Omit<Event, 'id'>, schemaOptions: { title: 'NewEvent', exclude: [ 'id' ] })",
        "properties": {
          "createACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can create subentries"
            }
          },
          "readACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can read this entry"
            }
          },
          "updateACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can update this entry"
            }
          },
          "deleteACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can delete this entry"
            }
          },
          "shareACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can add users/groups to createACL, readACL and updateACL"
            }
          },
          "adminACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can administrate this entry"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "data": {
            "type": "object"
          },
          "deviceId": {
            "type": "string",
            "description": "The events device"
          },
          "scanId": {
            "type": "string",
            "description": "The parent scan"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<Event, 'id'>"
      },
      "EventPartial": {
        "title": "EventPartial",
        "type": "object",
        "description": "(tsType: Partial<Event>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "createACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can create subentries"
            }
          },
          "readACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can read this entry"
            }
          },
          "updateACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can update this entry"
            }
          },
          "deleteACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can delete this entry"
            }
          },
          "shareACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can add users/groups to createACL, readACL and updateACL"
            }
          },
          "adminACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can administrate this entry"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "data": {
            "type": "object"
          },
          "deviceId": {
            "type": "string",
            "description": "The events device"
          },
          "scanId": {
            "type": "string",
            "description": "The parent scan"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Event>"
      },
      "NewExperimentAccount": {
        "title": "NewExperimentAccount",
        "type": "object",
        "description": "(tsType: Omit<ExperimentAccount, 'id'>, schemaOptions: { title: 'NewExperimentAccount', exclude: [ 'id' ] })",
        "properties": {
          "createACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can create subentries"
            }
          },
          "readACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can read this entry"
            }
          },
          "updateACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can update this entry"
            }
          },
          "deleteACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can delete this entry"
            }
          },
          "shareACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can add users/groups to createACL, readACL and updateACL"
            }
          },
          "adminACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can administrate this entry"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "read": {
            "type": "boolean"
          },
          "write": {
            "type": "boolean"
          },
          "remote": {
            "type": "boolean"
          },
          "token": {
            "type": "string"
          },
          "isFunctional": {
            "type": "boolean"
          },
          "experimentId": {
            "type": "string",
            "description": "Experiment to which this account belongs."
          }
        },
        "required": [
          "name",
          "read",
          "write",
          "remote",
          "token"
        ],
        "additionalProperties": true,
        "x-typescript-type": "Omit<ExperimentAccount, 'id'>"
      },
      "ExperimentAccount": {
        "title": "AccessAccount",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can create subentries"
            }
          },
          "readACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can read this entry"
            }
          },
          "updateACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can update this entry"
            }
          },
          "deleteACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can delete this entry"
            }
          },
          "shareACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can add users/groups to createACL, readACL and updateACL"
            }
          },
          "adminACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can administrate this entry"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "read": {
            "type": "boolean"
          },
          "write": {
            "type": "boolean"
          },
          "remote": {
            "type": "boolean"
          },
          "token": {
            "type": "string"
          },
          "isFunctional": {
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "read",
          "write",
          "remote",
          "token"
        ],
        "additionalProperties": false
      },
      "Experiment": {
        "title": "Experiment",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can create subentries"
            }
          },
          "readACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can read this entry"
            }
          },
          "updateACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can update this entry"
            }
          },
          "deleteACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can delete this entry"
            }
          },
          "shareACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can add users/groups to createACL, readACL and updateACL"
            }
          },
          "adminACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can administrate this entry"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "datasets": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "beamlineId": {
            "type": "string"
          },
          "writeAccount": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "logbook": {
            "type": "string"
          },
          "samples": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "experimentConfig": {
            "type": "object"
          },
          "experimentInfo": {
            "type": "object"
          },
          "activeSession": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "beamlineId"
        ],
        "additionalProperties": false
      },
      "NewExperiment": {
        "title": "NewExperiment",
        "type": "object",
        "description": "(tsType: Omit<Experiment, 'id'>, schemaOptions: { title: 'NewExperiment', exclude: [ 'id' ] })",
        "properties": {
          "createACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can create subentries"
            }
          },
          "readACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can read this entry"
            }
          },
          "updateACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can update this entry"
            }
          },
          "deleteACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can delete this entry"
            }
          },
          "shareACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can add users/groups to createACL, readACL and updateACL"
            }
          },
          "adminACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can administrate this entry"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "datasets": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "beamlineId": {
            "type": "string"
          },
          "writeAccount": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "logbook": {
            "type": "string"
          },
          "samples": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "experimentConfig": {
            "type": "object"
          },
          "experimentInfo": {
            "type": "object"
          },
          "activeSession": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "beamlineId"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Experiment, 'id'>"
      },
      "ExperimentPartial": {
        "title": "ExperimentPartial",
        "type": "object",
        "description": "(tsType: Partial<Experiment>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "createACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can create subentries"
            }
          },
          "readACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can read this entry"
            }
          },
          "updateACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can update this entry"
            }
          },
          "deleteACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can delete this entry"
            }
          },
          "shareACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can add users/groups to createACL, readACL and updateACL"
            }
          },
          "adminACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can administrate this entry"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "datasets": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "beamlineId": {
            "type": "string"
          },
          "writeAccount": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "logbook": {
            "type": "string"
          },
          "samples": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "experimentConfig": {
            "type": "object"
          },
          "experimentInfo": {
            "type": "object"
          },
          "activeSession": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Experiment>"
      },
      "NewFunctionalAccount": {
        "title": "NewFunctionalAccount",
        "type": "object",
        "description": "(tsType: Omit<FunctionalAccount, 'id'>, schemaOptions: { title: 'NewFunctionalAccount', exclude: [ 'id' ] })",
        "properties": {
          "createACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can create subentries"
            }
          },
          "readACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can read this entry"
            }
          },
          "updateACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can update this entry"
            }
          },
          "deleteACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can delete this entry"
            }
          },
          "shareACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can add users/groups to createACL, readACL and updateACL"
            }
          },
          "adminACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can administrate this entry"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "read": {
            "type": "boolean"
          },
          "write": {
            "type": "boolean"
          },
          "remote": {
            "type": "boolean"
          },
          "token": {
            "type": "string"
          },
          "isFunctional": {
            "type": "boolean"
          },
          "accessConfigId": {
            "type": "string",
            "description": "AccessConfig to which this account belongs."
          }
        },
        "required": [
          "name",
          "read",
          "write",
          "remote",
          "token"
        ],
        "additionalProperties": true,
        "x-typescript-type": "Omit<FunctionalAccount, 'id'>"
      },
      "FunctionalAccount": {
        "title": "AccessAccount",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can create subentries"
            }
          },
          "readACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can read this entry"
            }
          },
          "updateACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can update this entry"
            }
          },
          "deleteACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can delete this entry"
            }
          },
          "shareACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can add users/groups to createACL, readACL and updateACL"
            }
          },
          "adminACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can administrate this entry"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "read": {
            "type": "boolean"
          },
          "write": {
            "type": "boolean"
          },
          "remote": {
            "type": "boolean"
          },
          "token": {
            "type": "string"
          },
          "isFunctional": {
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "read",
          "write",
          "remote",
          "token"
        ],
        "additionalProperties": false
      },
      "Scan": {
        "title": "Scan",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can create subentries"
            }
          },
          "readACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can read this entry"
            }
          },
          "updateACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can update this entry"
            }
          },
          "deleteACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can delete this entry"
            }
          },
          "shareACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can add users/groups to createACL, readACL and updateACL"
            }
          },
          "adminACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can administrate this entry"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "scanType": {
            "type": "string"
          },
          "scanParameter": {
            "type": "object"
          },
          "userParameter": {
            "type": "object"
          },
          "queue": {
            "type": "string"
          },
          "scanId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "queueId": {
            "type": "string"
          },
          "exitStatus": {
            "type": "string"
          },
          "scanNumber": {
            "type": "number"
          },
          "metadata": {
            "type": "object"
          },
          "files": {
            "type": "object"
          },
          "sessionId": {
            "type": "string"
          },
          "datasetId": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "NewScan": {
        "title": "NewScan",
        "type": "object",
        "description": "(tsType: Omit<Scan, 'id'>, schemaOptions: { title: 'NewScan', exclude: [ 'id' ] })",
        "properties": {
          "createACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can create subentries"
            }
          },
          "readACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can read this entry"
            }
          },
          "updateACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can update this entry"
            }
          },
          "deleteACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can delete this entry"
            }
          },
          "shareACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can add users/groups to createACL, readACL and updateACL"
            }
          },
          "adminACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can administrate this entry"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "scanType": {
            "type": "string"
          },
          "scanParameter": {
            "type": "object"
          },
          "userParameter": {
            "type": "object"
          },
          "queue": {
            "type": "string"
          },
          "scanId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "queueId": {
            "type": "string"
          },
          "exitStatus": {
            "type": "string"
          },
          "scanNumber": {
            "type": "number"
          },
          "metadata": {
            "type": "object"
          },
          "files": {
            "type": "object"
          },
          "sessionId": {
            "type": "string"
          },
          "datasetId": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Omit<Scan, 'id'>"
      },
      "ScanPartial": {
        "title": "ScanPartial",
        "type": "object",
        "description": "(tsType: Partial<Scan>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "createACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can create subentries"
            }
          },
          "readACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can read this entry"
            }
          },
          "updateACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can update this entry"
            }
          },
          "deleteACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can delete this entry"
            }
          },
          "shareACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can add users/groups to createACL, readACL and updateACL"
            }
          },
          "adminACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can administrate this entry"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "scanType": {
            "type": "string"
          },
          "scanParameter": {
            "type": "object"
          },
          "userParameter": {
            "type": "object"
          },
          "queue": {
            "type": "string"
          },
          "scanId": {
            "type": "string"
          },
          "requestId": {
            "type": "string"
          },
          "queueId": {
            "type": "string"
          },
          "exitStatus": {
            "type": "string"
          },
          "scanNumber": {
            "type": "number"
          },
          "metadata": {
            "type": "object"
          },
          "files": {
            "type": "object"
          },
          "sessionId": {
            "type": "string"
          },
          "datasetId": {
            "type": "string"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Scan>"
      },
      "Session": {
        "title": "Session",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "createACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can create subentries"
            }
          },
          "readACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can read this entry"
            }
          },
          "updateACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can update this entry"
            }
          },
          "deleteACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can delete this entry"
            }
          },
          "shareACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can add users/groups to createACL, readACL and updateACL"
            }
          },
          "adminACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can administrate this entry"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "experimentId": {
            "type": "string",
            "description": "Session to which this device belongs."
          },
          "sessionConfig": {
            "type": "object"
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false
      },
      "NewSession": {
        "title": "NewSession",
        "type": "object",
        "description": "(tsType: Omit<Session, 'id'>, schemaOptions: { title: 'NewSession', exclude: [ 'id' ] })",
        "properties": {
          "createACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can create subentries"
            }
          },
          "readACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can read this entry"
            }
          },
          "updateACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can update this entry"
            }
          },
          "deleteACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can delete this entry"
            }
          },
          "shareACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can add users/groups to createACL, readACL and updateACL"
            }
          },
          "adminACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can administrate this entry"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "experimentId": {
            "type": "string",
            "description": "Session to which this device belongs."
          },
          "sessionConfig": {
            "type": "object"
          }
        },
        "required": [
          "name"
        ],
        "additionalProperties": false,
        "x-typescript-type": "Omit<Session, 'id'>"
      },
      "SessionPartial": {
        "title": "SessionPartial",
        "type": "object",
        "description": "(tsType: Partial<Session>, schemaOptions: { partial: true })",
        "properties": {
          "id": {
            "type": "string"
          },
          "createACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can create subentries"
            }
          },
          "readACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can read this entry"
            }
          },
          "updateACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can update this entry"
            }
          },
          "deleteACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can delete this entry"
            }
          },
          "shareACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can add users/groups to createACL, readACL and updateACL"
            }
          },
          "adminACL": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "groups or users who can administrate this entry"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "experimentId": {
            "type": "string",
            "description": "Session to which this device belongs."
          },
          "sessionConfig": {
            "type": "object"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "Partial<Session>"
      },
      "loopback.Count": {
        "type": "object",
        "title": "loopback.Count",
        "x-typescript-type": "@loopback/repository#Count",
        "properties": {
          "count": {
            "type": "number"
          }
        }
      },
      "AccessAccount.Filter": {
        "type": "object",
        "title": "AccessAccount.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "createACL": {
                    "type": "boolean"
                  },
                  "readACL": {
                    "type": "boolean"
                  },
                  "updateACL": {
                    "type": "boolean"
                  },
                  "deleteACL": {
                    "type": "boolean"
                  },
                  "shareACL": {
                    "type": "boolean"
                  },
                  "adminACL": {
                    "type": "boolean"
                  },
                  "createdAt": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "read": {
                    "type": "boolean"
                  },
                  "write": {
                    "type": "boolean"
                  },
                  "remote": {
                    "type": "boolean"
                  },
                  "token": {
                    "type": "boolean"
                  },
                  "isFunctional": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "createACL",
                    "readACL",
                    "updateACL",
                    "deleteACL",
                    "shareACL",
                    "adminACL",
                    "createdAt",
                    "createdBy",
                    "name",
                    "read",
                    "write",
                    "remote",
                    "token",
                    "isFunctional"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "AccessAccount.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<AccessAccount>"
      },
      "AccessAccount.Filter1": {
        "type": "object",
        "title": "AccessAccount.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "AccessAccount.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "createACL": {
                    "type": "boolean"
                  },
                  "readACL": {
                    "type": "boolean"
                  },
                  "updateACL": {
                    "type": "boolean"
                  },
                  "deleteACL": {
                    "type": "boolean"
                  },
                  "shareACL": {
                    "type": "boolean"
                  },
                  "adminACL": {
                    "type": "boolean"
                  },
                  "createdAt": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "read": {
                    "type": "boolean"
                  },
                  "write": {
                    "type": "boolean"
                  },
                  "remote": {
                    "type": "boolean"
                  },
                  "token": {
                    "type": "boolean"
                  },
                  "isFunctional": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "createACL",
                    "readACL",
                    "updateACL",
                    "deleteACL",
                    "shareACL",
                    "adminACL",
                    "createdAt",
                    "createdBy",
                    "name",
                    "read",
                    "write",
                    "remote",
                    "token",
                    "isFunctional"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "AccessAccount.Fields"
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<AccessAccount>"
      },
      "AccessConfig.ScopeFilter": {
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "AccessConfig.ScopeFilter"
      },
      "AccessConfig.IncludeFilter.Items": {
        "title": "AccessConfig.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string"
          },
          "scope": {
            "$ref": "#/components/schemas/AccessConfig.ScopeFilter"
          }
        }
      },
      "AccessConfig.Filter": {
        "type": "object",
        "title": "AccessConfig.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "createACL": {
                    "type": "boolean"
                  },
                  "readACL": {
                    "type": "boolean"
                  },
                  "updateACL": {
                    "type": "boolean"
                  },
                  "deleteACL": {
                    "type": "boolean"
                  },
                  "shareACL": {
                    "type": "boolean"
                  },
                  "adminACL": {
                    "type": "boolean"
                  },
                  "createdAt": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "targetAccount": {
                    "type": "boolean"
                  },
                  "beamlineId": {
                    "type": "boolean"
                  },
                  "authEnabled": {
                    "type": "boolean"
                  },
                  "activeAccounts": {
                    "type": "boolean"
                  },
                  "usePasswords": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "createACL",
                    "readACL",
                    "updateACL",
                    "deleteACL",
                    "shareACL",
                    "adminACL",
                    "createdAt",
                    "createdBy",
                    "targetAccount",
                    "beamlineId",
                    "authEnabled",
                    "activeAccounts",
                    "usePasswords"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "AccessConfig.Fields"
          },
          "include": {
            "title": "AccessConfig.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/AccessConfig.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<AccessConfig>"
      },
      "AccessConfig.Filter1": {
        "type": "object",
        "title": "AccessConfig.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "AccessConfig.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "createACL": {
                    "type": "boolean"
                  },
                  "readACL": {
                    "type": "boolean"
                  },
                  "updateACL": {
                    "type": "boolean"
                  },
                  "deleteACL": {
                    "type": "boolean"
                  },
                  "shareACL": {
                    "type": "boolean"
                  },
                  "adminACL": {
                    "type": "boolean"
                  },
                  "createdAt": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "targetAccount": {
                    "type": "boolean"
                  },
                  "beamlineId": {
                    "type": "boolean"
                  },
                  "authEnabled": {
                    "type": "boolean"
                  },
                  "activeAccounts": {
                    "type": "boolean"
                  },
                  "usePasswords": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "createACL",
                    "readACL",
                    "updateACL",
                    "deleteACL",
                    "shareACL",
                    "adminACL",
                    "createdAt",
                    "createdBy",
                    "targetAccount",
                    "beamlineId",
                    "authEnabled",
                    "activeAccounts",
                    "usePasswords"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "AccessConfig.Fields"
          },
          "include": {
            "title": "AccessConfig.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/AccessConfig.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<AccessConfig>"
      },
      "Beamline.ScopeFilter": {
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "Beamline.ScopeFilter"
      },
      "Beamline.IncludeFilter.Items": {
        "title": "Beamline.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string"
          },
          "scope": {
            "$ref": "#/components/schemas/Beamline.ScopeFilter"
          }
        }
      },
      "Beamline.Filter": {
        "type": "object",
        "title": "Beamline.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "createACL": {
                    "type": "boolean"
                  },
                  "readACL": {
                    "type": "boolean"
                  },
                  "updateACL": {
                    "type": "boolean"
                  },
                  "deleteACL": {
                    "type": "boolean"
                  },
                  "shareACL": {
                    "type": "boolean"
                  },
                  "adminACL": {
                    "type": "boolean"
                  },
                  "createdAt": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "activeExperiment": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "createACL",
                    "readACL",
                    "updateACL",
                    "deleteACL",
                    "shareACL",
                    "adminACL",
                    "createdAt",
                    "createdBy",
                    "name",
                    "activeExperiment"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Beamline.Fields"
          },
          "include": {
            "title": "Beamline.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Beamline.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Beamline>"
      },
      "Beamline.Filter1": {
        "type": "object",
        "title": "Beamline.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Beamline.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "createACL": {
                    "type": "boolean"
                  },
                  "readACL": {
                    "type": "boolean"
                  },
                  "updateACL": {
                    "type": "boolean"
                  },
                  "deleteACL": {
                    "type": "boolean"
                  },
                  "shareACL": {
                    "type": "boolean"
                  },
                  "adminACL": {
                    "type": "boolean"
                  },
                  "createdAt": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "activeExperiment": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "createACL",
                    "readACL",
                    "updateACL",
                    "deleteACL",
                    "shareACL",
                    "adminACL",
                    "createdAt",
                    "createdBy",
                    "name",
                    "activeExperiment"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Beamline.Fields"
          },
          "include": {
            "title": "Beamline.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Beamline.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Beamline>"
      },
      "Dataset.ScopeFilter": {
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "Dataset.ScopeFilter"
      },
      "Dataset.IncludeFilter.Items": {
        "title": "Dataset.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string"
          },
          "scope": {
            "$ref": "#/components/schemas/Dataset.ScopeFilter"
          }
        }
      },
      "Dataset.Filter": {
        "type": "object",
        "title": "Dataset.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "createACL": {
                    "type": "boolean"
                  },
                  "readACL": {
                    "type": "boolean"
                  },
                  "updateACL": {
                    "type": "boolean"
                  },
                  "deleteACL": {
                    "type": "boolean"
                  },
                  "shareACL": {
                    "type": "boolean"
                  },
                  "adminACL": {
                    "type": "boolean"
                  },
                  "createdAt": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "number": {
                    "type": "boolean"
                  },
                  "experimentId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "createACL",
                    "readACL",
                    "updateACL",
                    "deleteACL",
                    "shareACL",
                    "adminACL",
                    "createdAt",
                    "createdBy",
                    "name",
                    "number",
                    "experimentId"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Dataset.Fields"
          },
          "include": {
            "title": "Dataset.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Dataset.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Dataset>"
      },
      "Dataset.Filter1": {
        "type": "object",
        "title": "Dataset.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Dataset.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "createACL": {
                    "type": "boolean"
                  },
                  "readACL": {
                    "type": "boolean"
                  },
                  "updateACL": {
                    "type": "boolean"
                  },
                  "deleteACL": {
                    "type": "boolean"
                  },
                  "shareACL": {
                    "type": "boolean"
                  },
                  "adminACL": {
                    "type": "boolean"
                  },
                  "createdAt": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "number": {
                    "type": "boolean"
                  },
                  "experimentId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "createACL",
                    "readACL",
                    "updateACL",
                    "deleteACL",
                    "shareACL",
                    "adminACL",
                    "createdAt",
                    "createdBy",
                    "name",
                    "number",
                    "experimentId"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Dataset.Fields"
          },
          "include": {
            "title": "Dataset.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Dataset.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Dataset>"
      },
      "Device.ScopeFilter": {
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "Device.ScopeFilter"
      },
      "Device.IncludeFilter.Items": {
        "title": "Device.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string"
          },
          "scope": {
            "$ref": "#/components/schemas/Device.ScopeFilter"
          }
        }
      },
      "Device.Filter": {
        "type": "object",
        "title": "Device.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "createACL": {
                    "type": "boolean"
                  },
                  "readACL": {
                    "type": "boolean"
                  },
                  "updateACL": {
                    "type": "boolean"
                  },
                  "deleteACL": {
                    "type": "boolean"
                  },
                  "shareACL": {
                    "type": "boolean"
                  },
                  "adminACL": {
                    "type": "boolean"
                  },
                  "createdAt": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "parentId": {
                    "type": "boolean"
                  },
                  "sessionId": {
                    "type": "boolean"
                  },
                  "enabled": {
                    "type": "boolean"
                  },
                  "enabled_set": {
                    "type": "boolean"
                  },
                  "deviceClass": {
                    "type": "boolean"
                  },
                  "deviceTags": {
                    "type": "boolean"
                  },
                  "deviceConfig": {
                    "type": "boolean"
                  },
                  "acquisitionConfig": {
                    "type": "boolean"
                  },
                  "onFailure": {
                    "type": "boolean"
                  },
                  "userParameter": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "createACL",
                    "readACL",
                    "updateACL",
                    "deleteACL",
                    "shareACL",
                    "adminACL",
                    "createdAt",
                    "createdBy",
                    "name",
                    "description",
                    "parentId",
                    "sessionId",
                    "enabled",
                    "enabled_set",
                    "deviceClass",
                    "deviceTags",
                    "deviceConfig",
                    "acquisitionConfig",
                    "onFailure",
                    "userParameter"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Device.Fields"
          },
          "include": {
            "title": "Device.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Device.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Device>"
      },
      "Device.Filter1": {
        "type": "object",
        "title": "Device.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Device.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "createACL": {
                    "type": "boolean"
                  },
                  "readACL": {
                    "type": "boolean"
                  },
                  "updateACL": {
                    "type": "boolean"
                  },
                  "deleteACL": {
                    "type": "boolean"
                  },
                  "shareACL": {
                    "type": "boolean"
                  },
                  "adminACL": {
                    "type": "boolean"
                  },
                  "createdAt": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "description": {
                    "type": "boolean"
                  },
                  "parentId": {
                    "type": "boolean"
                  },
                  "sessionId": {
                    "type": "boolean"
                  },
                  "enabled": {
                    "type": "boolean"
                  },
                  "enabled_set": {
                    "type": "boolean"
                  },
                  "deviceClass": {
                    "type": "boolean"
                  },
                  "deviceTags": {
                    "type": "boolean"
                  },
                  "deviceConfig": {
                    "type": "boolean"
                  },
                  "acquisitionConfig": {
                    "type": "boolean"
                  },
                  "onFailure": {
                    "type": "boolean"
                  },
                  "userParameter": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "createACL",
                    "readACL",
                    "updateACL",
                    "deleteACL",
                    "shareACL",
                    "adminACL",
                    "createdAt",
                    "createdBy",
                    "name",
                    "description",
                    "parentId",
                    "sessionId",
                    "enabled",
                    "enabled_set",
                    "deviceClass",
                    "deviceTags",
                    "deviceConfig",
                    "acquisitionConfig",
                    "onFailure",
                    "userParameter"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Device.Fields"
          },
          "include": {
            "title": "Device.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Device.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Device>"
      },
      "Event.ScopeFilter": {
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "Event.ScopeFilter"
      },
      "Event.IncludeFilter.Items": {
        "title": "Event.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string"
          },
          "scope": {
            "$ref": "#/components/schemas/Event.ScopeFilter"
          }
        }
      },
      "Event.Filter": {
        "type": "object",
        "title": "Event.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "createACL": {
                    "type": "boolean"
                  },
                  "readACL": {
                    "type": "boolean"
                  },
                  "updateACL": {
                    "type": "boolean"
                  },
                  "deleteACL": {
                    "type": "boolean"
                  },
                  "shareACL": {
                    "type": "boolean"
                  },
                  "adminACL": {
                    "type": "boolean"
                  },
                  "createdAt": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "data": {
                    "type": "boolean"
                  },
                  "deviceId": {
                    "type": "boolean"
                  },
                  "scanId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "createACL",
                    "readACL",
                    "updateACL",
                    "deleteACL",
                    "shareACL",
                    "adminACL",
                    "createdAt",
                    "createdBy",
                    "data",
                    "deviceId",
                    "scanId"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Event.Fields"
          },
          "include": {
            "title": "Event.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Event.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Event>"
      },
      "Event.Filter1": {
        "type": "object",
        "title": "Event.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Event.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "createACL": {
                    "type": "boolean"
                  },
                  "readACL": {
                    "type": "boolean"
                  },
                  "updateACL": {
                    "type": "boolean"
                  },
                  "deleteACL": {
                    "type": "boolean"
                  },
                  "shareACL": {
                    "type": "boolean"
                  },
                  "adminACL": {
                    "type": "boolean"
                  },
                  "createdAt": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "data": {
                    "type": "boolean"
                  },
                  "deviceId": {
                    "type": "boolean"
                  },
                  "scanId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "createACL",
                    "readACL",
                    "updateACL",
                    "deleteACL",
                    "shareACL",
                    "adminACL",
                    "createdAt",
                    "createdBy",
                    "data",
                    "deviceId",
                    "scanId"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Event.Fields"
          },
          "include": {
            "title": "Event.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Event.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Event>"
      },
      "ExperimentAccount.ScopeFilter": {
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "ExperimentAccount.ScopeFilter"
      },
      "ExperimentAccount.IncludeFilter.Items": {
        "title": "ExperimentAccount.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string"
          },
          "scope": {
            "$ref": "#/components/schemas/ExperimentAccount.ScopeFilter"
          }
        }
      },
      "ExperimentAccount.Filter": {
        "type": "object",
        "title": "ExperimentAccount.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "createACL": {
                    "type": "boolean"
                  },
                  "readACL": {
                    "type": "boolean"
                  },
                  "updateACL": {
                    "type": "boolean"
                  },
                  "deleteACL": {
                    "type": "boolean"
                  },
                  "shareACL": {
                    "type": "boolean"
                  },
                  "adminACL": {
                    "type": "boolean"
                  },
                  "createdAt": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "read": {
                    "type": "boolean"
                  },
                  "write": {
                    "type": "boolean"
                  },
                  "remote": {
                    "type": "boolean"
                  },
                  "token": {
                    "type": "boolean"
                  },
                  "isFunctional": {
                    "type": "boolean"
                  },
                  "experimentId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "ExperimentAccount.Fields"
          },
          "include": {
            "title": "ExperimentAccount.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ExperimentAccount.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<ExperimentAccount>"
      },
      "ExperimentAccount.Filter1": {
        "type": "object",
        "title": "ExperimentAccount.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "ExperimentAccount.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "createACL": {
                    "type": "boolean"
                  },
                  "readACL": {
                    "type": "boolean"
                  },
                  "updateACL": {
                    "type": "boolean"
                  },
                  "deleteACL": {
                    "type": "boolean"
                  },
                  "shareACL": {
                    "type": "boolean"
                  },
                  "adminACL": {
                    "type": "boolean"
                  },
                  "createdAt": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "read": {
                    "type": "boolean"
                  },
                  "write": {
                    "type": "boolean"
                  },
                  "remote": {
                    "type": "boolean"
                  },
                  "token": {
                    "type": "boolean"
                  },
                  "isFunctional": {
                    "type": "boolean"
                  },
                  "experimentId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "ExperimentAccount.Fields"
          },
          "include": {
            "title": "ExperimentAccount.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ExperimentAccount.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<ExperimentAccount>"
      },
      "Experiment.ScopeFilter": {
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "Experiment.ScopeFilter"
      },
      "Experiment.IncludeFilter.Items": {
        "title": "Experiment.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string"
          },
          "scope": {
            "$ref": "#/components/schemas/Experiment.ScopeFilter"
          }
        }
      },
      "Experiment.Filter": {
        "type": "object",
        "title": "Experiment.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "createACL": {
                    "type": "boolean"
                  },
                  "readACL": {
                    "type": "boolean"
                  },
                  "updateACL": {
                    "type": "boolean"
                  },
                  "deleteACL": {
                    "type": "boolean"
                  },
                  "shareACL": {
                    "type": "boolean"
                  },
                  "adminACL": {
                    "type": "boolean"
                  },
                  "createdAt": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "datasets": {
                    "type": "boolean"
                  },
                  "beamlineId": {
                    "type": "boolean"
                  },
                  "writeAccount": {
                    "type": "boolean"
                  },
                  "userId": {
                    "type": "boolean"
                  },
                  "logbook": {
                    "type": "boolean"
                  },
                  "samples": {
                    "type": "boolean"
                  },
                  "experimentConfig": {
                    "type": "boolean"
                  },
                  "experimentInfo": {
                    "type": "boolean"
                  },
                  "activeSession": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "createACL",
                    "readACL",
                    "updateACL",
                    "deleteACL",
                    "shareACL",
                    "adminACL",
                    "createdAt",
                    "createdBy",
                    "name",
                    "datasets",
                    "beamlineId",
                    "writeAccount",
                    "userId",
                    "logbook",
                    "samples",
                    "experimentConfig",
                    "experimentInfo",
                    "activeSession"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Experiment.Fields"
          },
          "include": {
            "title": "Experiment.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Experiment.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Experiment>"
      },
      "Experiment.Filter1": {
        "type": "object",
        "title": "Experiment.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Experiment.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "createACL": {
                    "type": "boolean"
                  },
                  "readACL": {
                    "type": "boolean"
                  },
                  "updateACL": {
                    "type": "boolean"
                  },
                  "deleteACL": {
                    "type": "boolean"
                  },
                  "shareACL": {
                    "type": "boolean"
                  },
                  "adminACL": {
                    "type": "boolean"
                  },
                  "createdAt": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "datasets": {
                    "type": "boolean"
                  },
                  "beamlineId": {
                    "type": "boolean"
                  },
                  "writeAccount": {
                    "type": "boolean"
                  },
                  "userId": {
                    "type": "boolean"
                  },
                  "logbook": {
                    "type": "boolean"
                  },
                  "samples": {
                    "type": "boolean"
                  },
                  "experimentConfig": {
                    "type": "boolean"
                  },
                  "experimentInfo": {
                    "type": "boolean"
                  },
                  "activeSession": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "createACL",
                    "readACL",
                    "updateACL",
                    "deleteACL",
                    "shareACL",
                    "adminACL",
                    "createdAt",
                    "createdBy",
                    "name",
                    "datasets",
                    "beamlineId",
                    "writeAccount",
                    "userId",
                    "logbook",
                    "samples",
                    "experimentConfig",
                    "experimentInfo",
                    "activeSession"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Experiment.Fields"
          },
          "include": {
            "title": "Experiment.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Experiment.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Experiment>"
      },
      "FunctionalAccount.ScopeFilter": {
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "FunctionalAccount.ScopeFilter"
      },
      "FunctionalAccount.IncludeFilter.Items": {
        "title": "FunctionalAccount.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string"
          },
          "scope": {
            "$ref": "#/components/schemas/FunctionalAccount.ScopeFilter"
          }
        }
      },
      "FunctionalAccount.Filter": {
        "type": "object",
        "title": "FunctionalAccount.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "createACL": {
                    "type": "boolean"
                  },
                  "readACL": {
                    "type": "boolean"
                  },
                  "updateACL": {
                    "type": "boolean"
                  },
                  "deleteACL": {
                    "type": "boolean"
                  },
                  "shareACL": {
                    "type": "boolean"
                  },
                  "adminACL": {
                    "type": "boolean"
                  },
                  "createdAt": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "read": {
                    "type": "boolean"
                  },
                  "write": {
                    "type": "boolean"
                  },
                  "remote": {
                    "type": "boolean"
                  },
                  "token": {
                    "type": "boolean"
                  },
                  "isFunctional": {
                    "type": "boolean"
                  },
                  "accessConfigId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "FunctionalAccount.Fields"
          },
          "include": {
            "title": "FunctionalAccount.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/FunctionalAccount.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<FunctionalAccount>"
      },
      "FunctionalAccount.Filter1": {
        "type": "object",
        "title": "FunctionalAccount.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "FunctionalAccount.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "createACL": {
                    "type": "boolean"
                  },
                  "readACL": {
                    "type": "boolean"
                  },
                  "updateACL": {
                    "type": "boolean"
                  },
                  "deleteACL": {
                    "type": "boolean"
                  },
                  "shareACL": {
                    "type": "boolean"
                  },
                  "adminACL": {
                    "type": "boolean"
                  },
                  "createdAt": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "read": {
                    "type": "boolean"
                  },
                  "write": {
                    "type": "boolean"
                  },
                  "remote": {
                    "type": "boolean"
                  },
                  "token": {
                    "type": "boolean"
                  },
                  "isFunctional": {
                    "type": "boolean"
                  },
                  "accessConfigId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "FunctionalAccount.Fields"
          },
          "include": {
            "title": "FunctionalAccount.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/FunctionalAccount.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<FunctionalAccount>"
      },
      "Scan.ScopeFilter": {
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "Scan.ScopeFilter"
      },
      "Scan.IncludeFilter.Items": {
        "title": "Scan.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string"
          },
          "scope": {
            "$ref": "#/components/schemas/Scan.ScopeFilter"
          }
        }
      },
      "Scan.Filter": {
        "type": "object",
        "title": "Scan.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "createACL": {
                    "type": "boolean"
                  },
                  "readACL": {
                    "type": "boolean"
                  },
                  "updateACL": {
                    "type": "boolean"
                  },
                  "deleteACL": {
                    "type": "boolean"
                  },
                  "shareACL": {
                    "type": "boolean"
                  },
                  "adminACL": {
                    "type": "boolean"
                  },
                  "createdAt": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "scanType": {
                    "type": "boolean"
                  },
                  "scanParameter": {
                    "type": "boolean"
                  },
                  "userParameter": {
                    "type": "boolean"
                  },
                  "queue": {
                    "type": "boolean"
                  },
                  "scanId": {
                    "type": "boolean"
                  },
                  "requestId": {
                    "type": "boolean"
                  },
                  "queueId": {
                    "type": "boolean"
                  },
                  "exitStatus": {
                    "type": "boolean"
                  },
                  "scanNumber": {
                    "type": "boolean"
                  },
                  "metadata": {
                    "type": "boolean"
                  },
                  "files": {
                    "type": "boolean"
                  },
                  "sessionId": {
                    "type": "boolean"
                  },
                  "datasetId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "createACL",
                    "readACL",
                    "updateACL",
                    "deleteACL",
                    "shareACL",
                    "adminACL",
                    "createdAt",
                    "createdBy",
                    "scanType",
                    "scanParameter",
                    "userParameter",
                    "queue",
                    "scanId",
                    "requestId",
                    "queueId",
                    "exitStatus",
                    "scanNumber",
                    "metadata",
                    "files",
                    "sessionId",
                    "datasetId"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Scan.Fields"
          },
          "include": {
            "title": "Scan.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Scan.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Scan>"
      },
      "Scan.Filter1": {
        "type": "object",
        "title": "Scan.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Scan.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "createACL": {
                    "type": "boolean"
                  },
                  "readACL": {
                    "type": "boolean"
                  },
                  "updateACL": {
                    "type": "boolean"
                  },
                  "deleteACL": {
                    "type": "boolean"
                  },
                  "shareACL": {
                    "type": "boolean"
                  },
                  "adminACL": {
                    "type": "boolean"
                  },
                  "createdAt": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "scanType": {
                    "type": "boolean"
                  },
                  "scanParameter": {
                    "type": "boolean"
                  },
                  "userParameter": {
                    "type": "boolean"
                  },
                  "queue": {
                    "type": "boolean"
                  },
                  "scanId": {
                    "type": "boolean"
                  },
                  "requestId": {
                    "type": "boolean"
                  },
                  "queueId": {
                    "type": "boolean"
                  },
                  "exitStatus": {
                    "type": "boolean"
                  },
                  "scanNumber": {
                    "type": "boolean"
                  },
                  "metadata": {
                    "type": "boolean"
                  },
                  "files": {
                    "type": "boolean"
                  },
                  "sessionId": {
                    "type": "boolean"
                  },
                  "datasetId": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "createACL",
                    "readACL",
                    "updateACL",
                    "deleteACL",
                    "shareACL",
                    "adminACL",
                    "createdAt",
                    "createdBy",
                    "scanType",
                    "scanParameter",
                    "userParameter",
                    "queue",
                    "scanId",
                    "requestId",
                    "queueId",
                    "exitStatus",
                    "scanNumber",
                    "metadata",
                    "files",
                    "sessionId",
                    "datasetId"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Scan.Fields"
          },
          "include": {
            "title": "Scan.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Scan.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Scan>"
      },
      "Session.ScopeFilter": {
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "uniqueItems": true
              }
            ]
          },
          "include": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {},
              "additionalProperties": true
            }
          }
        },
        "additionalProperties": false,
        "title": "Session.ScopeFilter"
      },
      "Session.IncludeFilter.Items": {
        "title": "Session.IncludeFilter.Items",
        "type": "object",
        "properties": {
          "relation": {
            "type": "string"
          },
          "scope": {
            "$ref": "#/components/schemas/Session.ScopeFilter"
          }
        }
      },
      "Session.Filter": {
        "type": "object",
        "title": "Session.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "createACL": {
                    "type": "boolean"
                  },
                  "readACL": {
                    "type": "boolean"
                  },
                  "updateACL": {
                    "type": "boolean"
                  },
                  "deleteACL": {
                    "type": "boolean"
                  },
                  "shareACL": {
                    "type": "boolean"
                  },
                  "adminACL": {
                    "type": "boolean"
                  },
                  "createdAt": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "experimentId": {
                    "type": "boolean"
                  },
                  "sessionConfig": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "createACL",
                    "readACL",
                    "updateACL",
                    "deleteACL",
                    "shareACL",
                    "adminACL",
                    "createdAt",
                    "createdBy",
                    "name",
                    "experimentId",
                    "sessionConfig"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Session.Fields"
          },
          "include": {
            "title": "Session.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Session.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Session>"
      },
      "Session.Filter1": {
        "type": "object",
        "title": "Session.Filter",
        "properties": {
          "offset": {
            "type": "integer",
            "minimum": 0
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "example": 100
          },
          "skip": {
            "type": "integer",
            "minimum": 0
          },
          "order": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            ]
          },
          "where": {
            "title": "Session.WhereFilter",
            "type": "object",
            "additionalProperties": true
          },
          "fields": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "createACL": {
                    "type": "boolean"
                  },
                  "readACL": {
                    "type": "boolean"
                  },
                  "updateACL": {
                    "type": "boolean"
                  },
                  "deleteACL": {
                    "type": "boolean"
                  },
                  "shareACL": {
                    "type": "boolean"
                  },
                  "adminACL": {
                    "type": "boolean"
                  },
                  "createdAt": {
                    "type": "boolean"
                  },
                  "createdBy": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  },
                  "experimentId": {
                    "type": "boolean"
                  },
                  "sessionConfig": {
                    "type": "boolean"
                  }
                },
                "additionalProperties": false
              },
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "id",
                    "createACL",
                    "readACL",
                    "updateACL",
                    "deleteACL",
                    "shareACL",
                    "adminACL",
                    "createdAt",
                    "createdBy",
                    "name",
                    "experimentId",
                    "sessionConfig"
                  ],
                  "example": "id"
                },
                "uniqueItems": true
              }
            ],
            "title": "Session.Fields"
          },
          "include": {
            "title": "Session.IncludeFilter",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Session.IncludeFilter.Items"
                },
                {
                  "type": "string"
                }
              ]
            }
          }
        },
        "additionalProperties": false,
        "x-typescript-type": "@loopback/repository#Filter<Session>"
      }
    }
  }
}