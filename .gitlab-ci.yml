# This file is a template, and might need editing before it works on your project.
# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: docker:18.09
#commands to run in the Docker container before starting each job.
variables:
  DOCKER_DRIVER: overlay2
  DOCKER_BUILDKIT: 0

# services:
#   - docker:18.09-dind
# different stages in the pipeline
stages:
  # - Formatter
  # - Test
  - Build
  - Integration-Test-Setup
# formatter:
#   stage: Formatter
#   script:
#     - pip install black
#     - black --check --diff --color --line-length=100 ./
# pytest:
#   stage: Test
#   script:
#     - pip install pytest
#     - pip install -e ./scan_server
#     - cd scan_server/tests;pytest -v
# build device server:
#   stage: Build
#   image: docker:20.10.16
#   script:
#     - apk update; apk upgrade; apk add git
#     - git clone https://oauth2:$CI_OPHYD_DEVICES_KEY@git.psi.ch/bec_testbench/ophyd_devices.git
#     - docker build -t $REGISTRY_HOST/device_server:test -f ./device_server/Dockerfile .
#     - docker image push $REGISTRY_HOST/device_server:test
# build scan server:
#   stage: Build
#   image: docker:20.10.16
#   script:
#     - docker build -t $REGISTRY_HOST/scan_server:test -f ./scan_server/Dockerfile .
#     - docker image push $REGISTRY_HOST/scan_server:test
build scan bundler:
  stage: Build
  image: docker:18.09
  script:
    - docker build -t $CI_REGISTRY/scan_bundler:test -f ./scan_bundler/Dockerfile .
    - docker push $CI_REGISTRY/scan_bundler:test
integration test setup:
  stage: Integration-Test-Setup
  image: docker:20.10.16
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
  script:
    - docker build -t $REGISTRY_HOST/scan_bundler:test -f ./scan_bundler/Dockerfile .
    - docker image push $REGISTRY_HOST/scan_bundler:test
    - docker-compose -f ./docker-compose.yaml up
    - apk update; apk upgrade; apk add curl
    - timeout 120 /bin/sh -c -- 'while true; do res=$(curl -X "GET" --max-time 3 "http://docker:3030/sessions"); if [ ! -z "$res" ]; then exit 0; fi; sleep 1; done;'
  # - curl --fail http://localhost:3030/sessions
